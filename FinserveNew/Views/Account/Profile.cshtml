@model FinserveNew.Models.ViewModels.EmployeeDetailsViewModel

@{
    ViewData["Title"] = "My Profile";
}

@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["Success"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<div class="container mt-4">
    <h2 class="mb-1">My Profile</h2>
    <div class="mb-4">
        <div class="card-body">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h5 class="text-muted mb-0">@Model.EmployeeID | @Model.FirstName @Model.LastName</h5>
                    <h6 class="text-muted mb-0">@Model.Email</h6>
                </div>
                <div>
                    <button type="button" class="btn btn-primary" id="editButton">
                        <i class="fas fa-edit"></i> Edit
                    </button>
                    <button type="button" class="btn btn-primary d-none" id="saveButton">
                        <i class="fas fa-save"></i> Save Changes
                    </button>
                    <button type="button" class="btn btn-secondary d-none" id="cancelButton">
                        <i class="fas fa-times"></i> Cancel
                    </button>
                </div>
            </div>
        </div>
    </div>

    <form id="profileForm" asp-controller="Account" asp-action="Profile" method="post" enctype="multipart/form-data">
        @Html.AntiForgeryToken()
        <input type="hidden" asp-for="EmployeeID" />

        <ul class="nav nav-tabs" id="profileTabs" role="tablist">
            <li class="nav-item">
                <a class="nav-link active" id="personal-tab" data-bs-toggle="tab" href="#personal" role="tab">
                    <i class="fas fa-user"></i> Personal Info
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="employment-tab" data-bs-toggle="tab" href="#employment" role="tab">
                    <i class="fas fa-briefcase"></i> Employment
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="bank-tab" data-bs-toggle="tab" href="#bank" role="tab">
                    <i class="fas fa-university"></i> Bank Info
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="emergency-tab" data-bs-toggle="tab" href="#emergency" role="tab">
                    <i class="fas fa-phone-alt"></i> Emergency Contact
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="documents-tab" data-bs-toggle="tab" href="#documents" role="tab">
                    <i class="fas fa-file-alt"></i> Documents
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="security-tab" data-bs-toggle="tab" href="#security" role="tab">
                    <i class="fas fa-lock"></i> Security
                </a>
            </li>
        </ul>

        <div class="tab-content p-4 border border-top-0 rounded-bottom bg-white">
            <!-- Personal Info Tab -->
            <div class="tab-pane fade show active" id="personal" role="tabpanel">
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label asp-for="FirstName" class="form-label"></label>
                        <input asp-for="FirstName" class="form-control" readonly />
                    </div>
                    <div class="col-md-6 mb-3">
                        <label asp-for="LastName" class="form-label"></label>
                        <input asp-for="LastName" class="form-control" readonly />
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label asp-for="Nationality" class="form-label"></label>
                        <select asp-for="Nationality" id="nationalitySelect" asp-items="@(new SelectList(Model.Nationalities, Model.Nationality))" class="form-control select2-dropdown" disabled></select>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label asp-for="TelephoneNumber" class="form-label"></label>
                        <input asp-for="TelephoneNumber" class="form-control" readonly />
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label asp-for="Email" class="form-label"></label>
                        <input asp-for="Email" class="form-control" type="email" readonly />
                    </div>
                    <div class="col-md-6 mb-3" id="icContainer">
                        <label asp-for="IC" class="form-label">IC Number</label>
                        <input asp-for="IC" class="form-control" id="icInput" readonly />
                        <small><span asp-validation-for="IC" class="text-danger"></span></small>
                    </div>
                    <div class="col-md-6 mb-3" id="passportContainer" style="display: none;">
                        <label asp-for="PassportNumber" class="form-label">Passport Number</label>
                        <input asp-for="PassportNumber" class="form-control" id="passportInput" readonly />
                        <small><span asp-validation-for="PassportNumber" class="text-danger"></span></small>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label asp-for="IncomeTaxNumber" class="form-label">Income Tax Number</label>
                        <input asp-for="IncomeTaxNumber" class="form-control" readonly />
                    </div>
                    <div class="col-md-6 mb-3">
                        <label asp-for="EPFNumber" class="form-label">EPF Number</label>
                        <input asp-for="EPFNumber" class="form-control" readonly />
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label asp-for="DateOfBirth" class="form-label"></label>
                        <input asp-for="DateOfBirth" class="form-control" type="date" readonly />
                    </div>
                </div>
            </div>

            <!-- Employment Tab -->
            <div class="tab-pane fade" id="employment" role="tabpanel">
                <div class="alert alert-info mb-4">
                    <i class="fas fa-info-circle me-2"></i>
                    <strong>Note:</strong> Employment information can only be changed by HR administrators. Contact HR if any information needs to be updated.
                </div>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label asp-for="Position" class="form-label"></label>
                        <input asp-for="Position" class="form-control locked-field" readonly disabled />
                        <small class="text-muted">This field is managed by HR</small>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label asp-for="ConfirmationStatus" class="form-label"></label>
                        <input asp-for="ConfirmationStatus" class="form-control locked-field" readonly disabled />
                        <small class="text-muted">This field is managed by HR</small>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label asp-for="JoinDate" class="form-label"></label>
                        <input asp-for="JoinDate" class="form-control locked-field" type="date" readonly disabled />
                        <small class="text-muted">This field is managed by HR</small>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label class="form-label">Role</label>
                        <input class="form-control locked-field" value="@Model.RoleName" readonly disabled />
                        <small class="text-muted"><strong>Role changes are restricted.</strong> Contact system administrator for role modifications.</small>
                    </div>
                </div>
                @if (Model.ResignationDate.HasValue)
                {
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label asp-for="ResignationDate" class="form-label"></label>
                            <input asp-for="ResignationDate" class="form-control locked-field" type="date" readonly disabled />
                            <small class="text-muted">This field is managed by HR</small>
                        </div>
                    </div>
                }
            </div>

            <!-- Bank Info Tab -->
            <div class="tab-pane fade" id="bank" role="tabpanel">
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label asp-for="BankName" class="form-label"></label>
                        <select asp-for="BankName" asp-items="@(new SelectList(Model.BankNames, Model.BankName))" class="form-control select2-dropdown" disabled></select>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label asp-for="BankType" class="form-label"></label>
                        <select asp-for="BankType" asp-items="@(new SelectList(Model.BankTypes))" class="form-control" disabled></select>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label asp-for="BankAccountNumber" class="form-label"></label>
                        <input asp-for="BankAccountNumber" class="form-control" readonly />
                    </div>
                </div>
            </div>

            <!-- Emergency Contact Tab -->
            <div class="tab-pane fade" id="emergency" role="tabpanel">
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label asp-for="EmergencyContactName" class="form-label"></label>
                        <input asp-for="EmergencyContactName" class="form-control" readonly />
                    </div>
                    <div class="col-md-6 mb-3">
                        <label asp-for="EmergencyContactPhone" class="form-label"></label>
                        <input asp-for="EmergencyContactPhone" class="form-control" readonly />
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label asp-for="EmergencyContactRelationship" class="form-label"></label>
                        <select asp-for="EmergencyContactRelationship" asp-items="@(new SelectList(Model.Relationships, Model.EmergencyContactRelationship))" class="form-control select2-dropdown" disabled>
                            <option value="">-- Select Relationship --</option>
                        </select>
                        <span asp-validation-for="EmergencyContactRelationship" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <!-- Documents Tab -->
            <div class="tab-pane fade" id="documents" role="tabpanel">
                @if (Model.Documents != null && Model.Documents.Any())
                {
                    <div class="table-responsive">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>Type</th>
                                    <th>File Name</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var doc in Model.Documents)
                                {
                                    <tr>
                                        <td>@doc.DocumentType</td>
                                        <td>@doc.FileName</td>
                                        <td>
                                            <a href="@doc.FilePath" class="btn btn-sm btn-info" target="_blank">
                                                <i class="fas fa-eye"></i> View
                                            </a>
                                            <button type="submit" class="btn btn-sm btn-danger delete-doc-btn d-none" asp-controller="Account" asp-action="DeleteDocument" asp-route-documentId="@doc.DocumentID">
                                                <i class="fas fa-trash"></i> Delete
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="alert alert-info">
                        <p class="mb-0">No documents are currently available.</p>
                    </div>
                }

                <div class="mt-4 d-none" id="documentUploadSection">
                    <h5>Upload New Documents</h5>
                    <div id="documentRows">
                        <div class="row mb-2 document-row">
                            <div class="col-md-5">
                                <label class="form-label">Document Type</label>
                                <select name="NewDocumentTypes" class="form-select">
                                    <option value="">Select document type...</option>
                                    <option value="IC Photo">IC Photo</option>
                                    <option value="Resume">Resume</option>
                                    <option value="Certificate">Certificate</option>
                                    <option value="Other">Other</option>
                                </select>
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">File</label>
                                <input type="file" name="NewDocuments" class="form-control" />
                                <small class="form-text text-muted">Max file size: 5MB. Supported: PDF, JPG, PNG, DOC, DOCX</small>
                            </div>
                            <div class="col-md-1 d-flex align-items-center">
                                <button type="button" class="btn btn-sm btn-danger remove-document-btn">
                                    <i class="fas fa-times"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                    <button type="button" class="btn btn-outline-secondary" id="addDocumentRow">
                        <i class="fas fa-plus"></i> Add
                    </button>
                </div>
            </div>
            
            <!-- Security Tab -->
            <div class="tab-pane fade" id="security" role="tabpanel">
                <div class="card border-0">
                    <div class="card-body">
                        <h5 class="card-title mb-4">Change Password</h5>
                        <div class="change-password-form">
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label for="currentPassword" class="form-label">Current Password</label>
                                    <input type="password" id="currentPassword" name="currentPassword" class="form-control" />
                                    <div class="invalid-feedback" id="currentPasswordFeedback"></div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label for="newPassword" class="form-label">New Password</label>
                                    <input type="password" id="newPassword" name="newPassword" class="form-control" />
                                    <div class="invalid-feedback" id="newPasswordFeedback"></div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label for="confirmPassword" class="form-label">Confirm Password</label>
                                    <input type="password" id="confirmPassword" name="confirmPassword" class="form-control" />
                                    <div class="invalid-feedback" id="confirmPasswordFeedback"></div>
                                </div>
                            </div>
                            <div id="password-requirements" class="mb-3 text-muted">
                                <small>Password must contain at least:</small>
                                <ul class="mb-0">
                                    <li><small>8 characters long</small></li>
                                    <li><small>One uppercase letter</small></li>
                                    <li><small>One lowercase letter</small></li>
                                    <li><small>One number</small></li>
                                    <li><small>One special character</small></li>
                                </ul>
                            </div>
                            <button type="button" id="changePasswordBtn" class="btn btn-primary">
                                <i class="fas fa-key me-2"></i>Change Password
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

<style>
    select[disabled], .form-control:disabled, .form-control[readonly]{
        background-color: white;
        opacity: 1;
        cursor: context-menu;
    }

    .select2-container--disabled .select2-selection {
        background-color: white !important;
        opacity: 1;
        background-image: none !important;
    }

    .form-label {
        font-weight: 500;
    }

    /* Locked field styling for better usability */
    .locked-field {
        background-color: #f8f9fa !important;
        color: #6c757d !important;
        border-color: #dee2e6 !important;
        cursor: not-allowed !important;
    }

    .locked-field:focus {
        background-color: #f8f9fa !important;
        border-color: #dee2e6 !important;
        box-shadow: none !important;
    }

    /* Additional styling for locked fields */
    .locked-field::placeholder {
        color: #6c757d !important;
        opacity: 0.8;
    }

    /* Style for small help text under locked fields */
    .text-muted {
        font-size: 0.875rem;
    }

    /* Alert styling for employment tab */
    .alert-info {
        border-left: 4px solid #0dcaf0;
        background-color: #e7f3ff;
        border-color: #b8daff;
    }
</style>

@section Scripts {
    <!-- Select2 for searchable dropdowns -->
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/select2-bootstrap-5-theme@1.3.0/dist/select2-bootstrap-5-theme.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

    <script>
        $(document).ready(function() {
            const form = $('#profileForm');
            const editButton = $('#editButton');
            const saveButton = $('#saveButton');
            const cancelButton = $('#cancelButton');
            const inputs = form.find('input, select').not('[type="hidden"], [name="documentFile"]');
            const selects = form.find('select').not('#documentType');
            const documentUploadSection = $('#documentUploadSection');
            const documentRows = $('#documentRows');
            const addDocumentRowBtn = $('#addDocumentRow');
            const icContainer = $('#icContainer');
            const passportContainer = $('#passportContainer');
            const icInput = $('#icInput');
            const passportInput = $('#passportInput');
            const nationalitySelect = $('#nationalitySelect');

            // Auto-dismiss alert after 3 seconds
            setTimeout(function() {
                $('.alert.alert-success').alert('close');
            }, 3000);

            // Initialize Select2 for searchable dropdowns
            $('.select2-dropdown').select2({
                theme: 'bootstrap-5',
                width: '100%',
                placeholder: function() { return $(this).data('placeholder') || 'Select option'; },
                allowClear: false,
                dropdownParent: $('body')
            });

            // Set initial IC/Passport visibility
            handleNationalityChange();

            editButton.click(function() {
                // Ccapture all existing values before modifying the form
                const currentValues = {};
                form.find('input, select').each(function() {
                    const input = $(this);
                    currentValues[input.attr('name')] = input.val();
                });

                inputs.prop('readonly', false).prop('disabled', false);
                selects.addClass('form-select');

                // Keep restricted fields locked
                $('#Email').prop('readonly', true).prop('disabled', false).addClass('locked-field');
                $('#Position').prop('readonly', true).prop('disabled', true).addClass('locked-field');
                $('#ConfirmationStatus').prop('readonly', true).prop('disabled', true).addClass('locked-field');
                $('#JoinDate').prop('readonly', true).prop('disabled', true).addClass('locked-field');
                $('#ResignationDate').prop('readonly', true).prop('disabled', true).addClass('locked-field');
                
                // Keep role field permanently locked
                $('input[value="@Model.RoleName"]').prop('readonly', true).prop('disabled', true).addClass('locked-field');

                // Re-init Select2 after enabling
                $('.select2-dropdown').select2('destroy').select2({
                    theme: 'bootstrap-5',
                    width: '100%',
                    placeholder: function() { return $(this).data('placeholder') || 'Select option'; },
                    allowClear: false,
                    dropdownParent: $('body')
                });

                // Restore any values that might have been reset during re-initialization
                form.find('input, select').each(function() {
                    const input = $(this);
                    const name = input.attr('name');
                    if (currentValues[name]) {
                        input.val(currentValues[name]);
                    }
                });

                // Trigger change events on select elements to ensure any dependent UI is updated
                $('select').trigger('change');

                // Ensure nationality handler applies required rules
                handleNationalityChange();

                editButton.addClass('d-none');
                saveButton.removeClass('d-none');
                cancelButton.removeClass('d-none');
                documentUploadSection.removeClass('d-none');
                $('.delete-doc-btn').removeClass('d-none');
            });

            $('form').on('submit', function() {
                console.log("Form data being submitted:");
                var formData = {};
                $(this).serializeArray().forEach(function(field) {
                    formData[field.name] = field.value;
                });
                console.log(formData);
            });

            cancelButton.click(function() {
                location.reload();
            });

            saveButton.click(function() {
                // Basic form validation
                let isValid = true;

                // Check if nationality-specific fields are valid
                const selectedNationality = nationalitySelect.val();
                const isMalaysian = selectedNationality === 'Malaysia';

                if (isMalaysian) {
                    if (!icInput.val().trim()) {
                        icInput.addClass('is-invalid');
                        isValid = false;
                    }
                } else {
                    if (!passportInput.val().trim()) {
                        passportInput.addClass('is-invalid');
                        isValid = false;
                    }
                }

                // Check other required fields
                form.find('[required]').each(function() {
                    if (!$(this).val()) {
                        $(this).addClass('is-invalid');
                        isValid = false;
                    }
                });

                if (isValid) {
                    // Add a loading state to prevent double submission
                    saveButton.prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i> Saving...');
                    form.submit();
                } else {
                    // Show an alert for invalid form
                    alert('Please fill in all required fields before saving.');
                    return false;
                }
            });

            // Nationality change toggles IC/Passport and required rules
            nationalitySelect.on('change', function() {
                handleNationalityChange();
            });

            function handleNationalityChange() {
                const selectedNationality = nationalitySelect.val();
                const isMalaysian = selectedNationality === 'Malaysia';
                const isEditMode = !editButton.is(':visible');

                if (isMalaysian) {
                    icContainer.show();
                    passportContainer.hide();
                    if (isEditMode) {
                        icInput.prop('required', true);
                        passportInput.prop('required', false);
                    }
                } else {
                    icContainer.hide();
                    passportContainer.show();
                    if (isEditMode) {
                        icInput.prop('required', false);
                        passportInput.prop('required', true);
                    }
                }
            }

            // Activate tabs based on URL hash
            let hash = window.location.hash;
            if (hash) {
                $(`#profileTabs a[href="${hash}"]`).tab('show');
            }
            // Or based on query param ?tab=#documents
            const tabParam = new URLSearchParams(window.location.search).get('tab');
            if (tabParam) {
                $(`#profileTabs a[href='${tabParam}']`).tab('show');
            }

            // Update URL hash when tab changes
            $('a[data-bs-toggle="tab"]').on('shown.bs.tab', function (e) {
                history.replaceState(null, null, $(e.target).attr('href'));
            });

            // Document rows dynamic add/remove
            function attachRemoveHandlers() {
                $('.remove-document-btn').off('click').on('click', function() {
                    $(this).closest('.document-row').remove();
                });
            }
            attachRemoveHandlers();

            addDocumentRowBtn.on('click', function () {
                documentRows.append(`
                        <div class="row mb-2 document-row">
                            <div class="col-md-5">
                                <select name="NewDocumentTypes" class="form-select">
                                    <option value="">Select document type...</option>
                                    <option value="IC Photo">IC Photo</option>
                                    <option value="Resume">Resume</option>
                                    <option value="Certificate">Certificate</option>
                                    <option value="Other">Other</option>
                                </select>
                            </div>
                            <div class="col-md-6">
                                <input type="file" name="NewDocuments" class="form-control" />
                                <small class="form-text text-muted">Max file size: 5MB. Supported: PDF, JPG, PNG, DOC, DOCX</small>
                            </div>
                            <div class="col-md-1 d-flex align-items-center">
                                <button type="button" class="btn btn-sm btn-danger remove-document-btn">
                                    <i class="fas fa-times"></i>
                                </button>
                            </div>
                        </div>
                `);
                attachRemoveHandlers();
            });
        });

        // Password change functionality
        $("#changePasswordBtn").click(function() {
            // Reset validation states
            $(".is-invalid").removeClass("is-invalid");
            $(".invalid-feedback").text("");

            const currentPassword = $("#currentPassword").val();
            const newPassword = $("#newPassword").val();
            const confirmPassword = $("#confirmPassword").val();

            let isValid = true;

            // Validate current password
            if (!currentPassword) {
                $("#currentPassword").addClass("is-invalid");
                $("#currentPasswordFeedback").text("Current password is required");
                isValid = false;
            }

            // Validate new password
            if (!newPassword) {
                $("#newPassword").addClass("is-invalid");
                $("#newPasswordFeedback").text("New password is required");
                isValid = false;
            } else if (newPassword.length < 8) {
                $("#newPassword").addClass("is-invalid");
                $("#newPasswordFeedback").text("Password must be at least 8 characters long");
                isValid = false;
            } else if (!/(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[^a-zA-Z\d])/.test(newPassword)) {
                $("#newPassword").addClass("is-invalid");
                $("#newPasswordFeedback").text("Password must contain uppercase, lowercase, number, and special character");
                isValid = false;
            }

            // Validate confirmation
            if (newPassword !== confirmPassword) {
                $("#confirmPassword").addClass("is-invalid");
                $("#confirmPasswordFeedback").text("Passwords don't match");
                isValid = false;
            }

            if (isValid) {
                // Send AJAX request to change password
                $.ajax({
                    url: '@Url.Action("ChangePassword", "Account")',
                    type: 'POST',
                    data: {
                        currentPassword: currentPassword,
                        newPassword: newPassword,
                        confirmPassword: confirmPassword,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            // Clear form
                            $("#currentPassword, #newPassword, #confirmPassword").val("");

                            // Show success message
                            $("<div>")
                                .addClass("alert alert-success alert-dismissible fade show mt-3")
                                .html(`
                                    ${response.message}
                                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                                `)
                                .insertBefore("#password-requirements");

                            // Auto dismiss after 5 seconds
                            setTimeout(function() {
                                $(".alert-success").alert('close');
                            }, 5000);
                        } else {
                            // Show error
                            $("#currentPassword").addClass("is-invalid");
                            $("#currentPasswordFeedback").text(response.message);
                        }
                    },
                    error: function() {
                        // Show general error
                        $("<div>")
                            .addClass("alert alert-danger alert-dismissible fade show mt-3")
                            .html(`
                                An error occurred. Please try again.
                                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                            `)
                            .insertBefore("#password-requirements");
                    }
                });
            }
        });
    </script>
}
