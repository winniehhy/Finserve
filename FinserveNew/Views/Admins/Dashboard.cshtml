@{
    ViewData["Title"] = "Admin Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Dashboard Content -->
<div class="dashboard-container">
    <!-- Page Header -->
    <div class="page-header mb-4">
        <div class="d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center">
            <div class="mb-3 mb-md-0">
                <h1 class="page-title mb-2">
                    <i class="fas fa-user-shield me-2 text-primary"></i>
                    Admin Dashboard
                </h1>
                <p class="page-subtitle text-muted mb-0">Welcome back, @User.Identity.Name | @ViewBag.CurrentMonth</p>
            </div>
            <div class="d-flex gap-2">
                <button class="btn btn-outline-secondary" onclick="refreshDashboard()" title="Refresh Dashboard">
                    <i class="fas fa-sync-alt me-2"></i>Refresh
                </button>
                <div class="dropdown">
                    <button class="btn btn-primary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                        <i class="fas fa-plus me-2"></i>Quick Action
                    </button>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="@Url.Action("Create", "Invoice")"><i class="fas fa-file-invoice me-2"></i>Create Invoice</a></li>
                        <li><a class="dropdown-item" href="@Url.Action("ReviewReports", "Report")"><i class="fas fa-chart-line me-2"></i>View Reports</a></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>

    <!-- Quick Stats Cards -->
    <div class="row g-3 mb-4">
        <div class="col-lg-3 col-md-6">
            <div class="stat-card stat-card-primary h-100">
                <div class="card-body p-4">
                    <div class="d-flex align-items-center mb-3">
                        <div class="stat-icon bg-primary">
                            <i class="fas fa-file-invoice-dollar"></i>
                        </div>
                        <div class="ms-3 flex-grow-1">
                            <div class="stat-number h4 mb-1">@ViewBag.TotalInvoices</div>
                            <div class="stat-label text-muted">Total Invoices</div>
                        </div>
                    </div>
                    <div class="stat-details">
                        <div class="d-flex align-items-center text-success mb-2">
                            <i class="fas fa-check-circle me-2"></i>
                            <small>@ViewBag.Paid completed</small>
                        </div>
                        @{
                            var totalInvoices = (int)(ViewBag.TotalInvoices ?? 0);
                            var paidInvoices = (int)(ViewBag.Paid ?? 0);
                            var completionRate = totalInvoices > 0 ? (paidInvoices * 100.0 / totalInvoices) : 0;
                        }
                        <div class="progress mb-2" style="height: 6px;">
                            <div class="progress-bar bg-success" style="width: @completionRate%"></div>
                        </div>
                        <small class="text-muted">@completionRate.ToString("F1")% completion rate</small>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-3 col-md-6">
            <div class="stat-card stat-card-warning h-100">
                <div class="card-body p-4">
                    <div class="d-flex align-items-center mb-3">
                        <div class="stat-icon bg-warning">
                            <i class="fas fa-users"></i>
                        </div>
                        <div class="ms-3 flex-grow-1">
                            <div class="stat-number h4 mb-1">@ViewBag.TotalEmployees</div>
                            <div class="stat-label text-muted">Total Employees</div>
                        </div>
                    </div>
                    <div class="stat-details">
                        <div class="d-flex align-items-center text-success mb-2">
                            <i class="fas fa-user-check me-2"></i>
                            <small>@ViewBag.ActiveEmployees active</small>
                        </div>
                        @{
                            var totalEmployees = (int)(ViewBag.TotalEmployees ?? 0);
                            var activeEmployees = (int)(ViewBag.ActiveEmployees ?? 0);
                            var activeRate = totalEmployees > 0 ? (activeEmployees * 100.0 / totalEmployees) : 0;
                        }
                        <div class="progress mb-2" style="height: 6px;">
                            <div class="progress-bar bg-success" style="width: @activeRate%"></div>
                        </div>
                        <small class="text-muted">@activeRate.ToString("F1")% active rate</small>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-3 col-md-6">
            <div class="stat-card stat-card-success h-100">
                <div class="card-body p-4">
                    <div class="d-flex align-items-center mb-3">
                        <div class="stat-icon bg-success">
                            <i class="fas fa-money-bill-wave"></i>
                        </div>
                        <div class="ms-3 flex-grow-1">
                            <div class="stat-number h4 mb-1">RM @(((decimal?)ViewBag.ThisMonthTotal ?? 0m).ToString("N0"))</div>
                            <div class="stat-label text-muted">This Month's Revenue</div>
                        </div>
                    </div>
                    <div class="stat-details">
                        <div class="d-flex align-items-center text-primary">
                            <i class="fas fa-chart-line me-2"></i>
                            <small>Outstanding: RM @(((decimal?)ViewBag.Outstanding ?? 0m).ToString("N0"))</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-3 col-md-6">
            <div class="stat-card stat-card-info h-100">
                <div class="card-body p-4">
                    <div class="d-flex align-items-center mb-3">
                        <div class="stat-icon bg-info">
                            <i class="fas fa-percentage"></i>
                        </div>
                        <div class="ms-3 flex-grow-1">
                            @{
                                var collectionRate = totalInvoices > 0 ? (paidInvoices * 100.0 / totalInvoices) : 0;
                            }
                            <div class="stat-number h4 mb-1">@collectionRate.ToString("F1")%</div>
                            <div class="stat-label text-muted">Collection Rate</div>
                        </div>
                    </div>
                    <div class="stat-details">
                        <div class="d-flex align-items-center text-info">
                            <i class="fas fa-info-circle me-2"></i>
                            <small>Invoice payment efficiency</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Main Content Grid -->
    <div class="row g-4">
        <!-- Left Column - Main Content -->
        <div class="col-lg-8">
            <!-- System Overview Cards -->
            <div class="row g-4 mb-4">
                <div class="col-md-6">
                    <div class="card h-100 shadow-sm">
                        <div class="card-header bg-light border-0 py-3">
                            <h6 class="card-title mb-0">
                                <i class="fas fa-chart-pie me-2 text-primary"></i>Invoice Status Distribution
                            </h6>
                        </div>
                        <div class="card-body">
                            @{
                                var pending = (int)(ViewBag.Pending ?? 0);
                                var sent = (int)(ViewBag.Sent ?? 0);
                                var paid = (int)(ViewBag.Paid ?? 0);
                            }
                            <div class="chart-container" style="position: relative; height: 200px;">
                                <canvas id="invoiceStatusChart"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card h-100 shadow-sm">
                        <div class="card-header bg-light border-0 py-3">
                            <h6 class="card-title mb-0">
                                <i class="fas fa-users-cog me-2 text-warning"></i>System Activity
                            </h6>
                        </div>
                        <div class="card-body">
                            <div class="activity-list">
                                <div class="activity-item">
                                    <div class="activity-icon bg-primary">
                                        <i class="fas fa-file-invoice"></i>
                                    </div>
                                    <div class="activity-content">
                                        <h6 class="mb-1">@ViewBag.TotalInvoices Total Invoices</h6>
                                        <small class="text-muted">All time system records</small>
                                    </div>
                                </div>
                                <div class="activity-item">
                                    <div class="activity-icon bg-success">
                                        <i class="fas fa-users"></i>
                                    </div>
                                    <div class="activity-content">
                                        <h6 class="mb-1">@ViewBag.ActiveEmployees Active Staff</h6>
                                        <small class="text-muted">Out of @ViewBag.TotalEmployees total employees</small>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Quick Actions -->
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-light border-0 py-3">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-bolt me-2 text-warning"></i>Administrative Actions
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row g-3">
                        <div class="col-md-4">
                            <a href="@Url.Action("Create", "Invoice")" class="quick-action-btn text-decoration-none">
                                <div class="card h-100 border-0 shadow-sm">
                                    <div class="card-body text-center p-4">
                                        <div class="quick-action-icon bg-primary text-white rounded-circle mx-auto mb-3">
                                            <i class="fas fa-plus"></i>
                                        </div>
                                        <h6 class="card-title">Create Invoice</h6>
                                        <p class="card-text text-muted small mb-0">Generate new invoice</p>
                                    </div>
                                </div>
                            </a>
                        </div>
                        <div class="col-md-4">
                            <a href="@Url.Action("InvoiceRecord", "Invoice")" class="quick-action-btn text-decoration-none">
                                <div class="card h-100 border-0 shadow-sm">
                                    <div class="card-body text-center p-4">
                                        <div class="quick-action-icon bg-warning text-white rounded-circle mx-auto mb-3">
                                            <i class="fas fa-list-alt"></i>
                                        </div>
                                        <h6 class="card-title">Manage Invoices</h6>
                                        <p class="card-text text-muted small mb-0">View all invoices</p>
                                    </div>
                                </div>
                            </a>
                        </div>
                        <div class="col-md-4">
                            <a href="@Url.Action("ReviewReports", "Report")" class="quick-action-btn text-decoration-none">
                                <div class="card h-100 border-0 shadow-sm">
                                    <div class="card-body text-center p-4">
                                        <div class="quick-action-icon bg-info text-white rounded-circle mx-auto mb-3">
                                            <i class="fas fa-chart-line"></i>
                                        </div>
                                        <h6 class="card-title">View Reports</h6>
                                        <p class="card-text text-muted small mb-0">Analytics & insights</p>
                                    </div>
                                </div>
                            </a>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Recent Invoices -->
            <div class="card shadow-sm">
                <div class="card-header bg-light border-0 py-3 d-flex justify-content-between align-items-center">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-file-invoice me-2 text-success"></i>Recent Invoices
                    </h5>
                    <a href="@Url.Action("InvoiceRecord", "Invoice")" class="btn btn-sm btn-outline-primary">View All</a>
                </div>
                <div class="card-body p-0">
                    @if (ViewBag.RecentInvoices != null && ((IEnumerable<FinserveNew.Models.Invoice>)ViewBag.RecentInvoices).Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-hover mb-0">
                                <thead class="table-light">
                                    <tr>
                                        <th class="border-0">Invoice ID</th>
                                        <th class="border-0">Client</th>
                                        <th class="border-0">Issue Date</th>
                                        <th class="border-0">Amount</th>
                                        <th class="border-0">Status</th>
                                        <th class="border-0">Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var inv in (IEnumerable<FinserveNew.Models.Invoice>)ViewBag.RecentInvoices)
                                    {
                                        <tr>
                                            <td class="fw-medium">#@inv.InvoiceNumber</td>
                                            <td>@inv.ClientName</td>
                                            <td class="text-muted">@inv.IssueDate.ToString("dd MMM, yyyy")</td>
                                            <td><strong class="text-primary">@inv.FormattedAmount</strong></td>
                                            <td>
                                                <span class="badge @inv.StatusBadgeClass">
                                                    @inv.Status
                                                </span>
                                            </td>
                                            <td>
                                                @if (inv.Status.Equals("Paid", StringComparison.OrdinalIgnoreCase))
                                                {
                                                    <a href="@Url.Action("Details", "Invoice", new { id = inv.InvoiceID })"
                                                       class="btn btn-sm btn-outline-primary">
                                                        <i class="fas fa-eye me-1"></i>View
                                                    </a>
                                                }
                                                else
                                                {
                                                    <div class="btn-group" role="group">
                                                        <a href="@Url.Action("Edit", "Invoice", new { id = inv.InvoiceID })"
                                                           class="btn btn-sm btn-outline-warning">
                                                            <i class="fas fa-edit me-1"></i>Edit
                                                        </a>
                                                        <button type="button" class="btn btn-sm btn-outline-danger"
                                                                onclick="confirmDelete(@inv.InvoiceID, '@inv.InvoiceNumber')">
                                                            <i class="fas fa-trash me-1"></i>Delete
                                                        </button>
                                                    </div>
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-file-invoice fa-3x text-muted mb-3"></i>
                            <p class="text-muted mb-3">No recent invoices</p>
                            <a href="@Url.Action("Create", "Invoice")" class="btn btn-primary">Create New Invoice</a>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Right Column - Sidebar -->
        <div class="col-lg-4">
            <!-- Financial Overview -->
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-light border-0 py-3">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-chart-line me-2 text-success"></i>Financial Overview
                    </h5>
                </div>
                <div class="card-body">
                    <div class="financial-overview">
                        <div class="financial-item">
                            <div class="financial-icon bg-success bg-opacity-10">
                                <i class="fas fa-money-bill-wave text-success"></i>
                            </div>
                            <div class="financial-content">
                                <h6 class="text-uppercase fw-normal">Paid Revenue</h6>
                                <h5 class="text-success mb-0">RM @(((decimal?)ViewBag.ThisMonthTotal ?? 0m).ToString("N2"))</h5>
                            </div>
                        </div>
                        <div class="financial-item">
                            <div class="financial-icon bg-warning bg-opacity-10">
                                <i class="fas fa-exclamation-triangle text-warning"></i>
                            </div>
                            <div class="financial-content">
                                <h6 class="text-uppercase fw-normal">Outstanding</h6>
                                <h5 class="text-warning mb-0">RM @(((decimal?)ViewBag.Outstanding ?? 0m).ToString("N2"))</h5>
                            </div>
                        </div>
                        <div class="financial-item">
                            <div class="financial-icon bg-info bg-opacity-10">
                                <i class="fas fa-percentage text-info"></i>
                            </div>
                            <div class="financial-content">
                                <h6 class="text-uppercase fw-normal">Collection Rate</h6>
                                <h5 class="text-info mb-0">@collectionRate.ToString("F1")%</h5>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Quick Links -->
            <div class="card shadow-sm">
                <div class="card-header bg-light border-0 py-3">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-external-link-alt me-2 text-info"></i>Quick Links
                    </h5>
                </div>
                <div class="card-body">
                    <div class="quick-links">
                        <a href="@Url.Action("ReviewReports", "Report")" class="quick-link-item">
                            <i class="fas fa-chart-bar text-success"></i>
                            <span>Payroll Reports</span>
                            <i class="fas fa-chevron-right"></i>
                        </a>
                        <a href="@Url.Action("ReviewReports", "Report")#employee" class="quick-link-item">
                            <i class="fas fa-users text-info"></i>
                            <span>Employee Reports</span>
                            <i class="fas fa-chevron-right"></i>
                        </a>
                        <a href="@Url.Action("GenerateReport", "Invoice")" class="quick-link-item">
                            <i class="fas fa-file-invoice-dollar text-warning"></i>
                            <span>Invoice Reports</span>
                            <i class="fas fa-chevron-right"></i>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.js"></script>
    <script>
        // Admin Dashboard functionality
        document.addEventListener('DOMContentLoaded', function () {
            initializeCharts();
            loadReadNotifications();
            startAutoRefresh();
        });

        // Initialize Charts
        function initializeCharts() {
            // Invoice Status Chart
            const ctx = document.getElementById('invoiceStatusChart');
            if (ctx) {
                const chartData = {
                    labels: ['Paid', 'Sent', 'Pending'],
                    datasets: [{
                        data: [@ViewBag.Paid, @ViewBag.Sent, @ViewBag.Pending],
                        backgroundColor: ['#28a745', '#17a2b8', '#ffc107'],
                        borderWidth: 2,
                        borderColor: '#fff'
                    }]
                };

                new Chart(ctx, {
                    type: 'doughnut',
                    data: chartData,
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                position: 'bottom',
                                labels: {
                                    padding: 15,
                                    usePointStyle: true
                                }
                            },
                            tooltip: {
                                callbacks: {
                                    label: function(context) {
                                        return context.label + ': ' + context.parsed;
                                    }
                                }
                            }
                        }
                    }
                });
            }
        }

        // Auto refresh dashboard data
        function startAutoRefresh() {
            setInterval(function() {
                refreshCriticalStats();
            }, 300000); // 5 minutes
        }

        function refreshCriticalStats() {
            console.log('Refreshing dashboard stats...');
        }

        // Manual refresh function
        function refreshDashboard() {
            const refreshBtn = document.querySelector('[onclick="refreshDashboard()"]');
            if (refreshBtn) {
                const icon = refreshBtn.querySelector('i');
                icon.classList.add('fa-spin');

                setTimeout(function() {
                    icon.classList.remove('fa-spin');
                    location.reload();
                }, 1000);
            }
        }

        // Delete confirmation function for invoices
        function confirmDelete(invoiceId, invoiceNumber) {
            if (confirm(`Are you sure you want to delete Invoice #${invoiceNumber}? This action cannot be undone.`)) {
                const form = document.createElement('form');
                form.method = 'POST';
                form.action = '@Url.Action("Delete", "Invoice")';

                const token = document.querySelector('input[name="__RequestVerificationToken"]');
                if (token) {
                    const tokenInput = document.createElement('input');
                    tokenInput.type = 'hidden';
                    tokenInput.name = '__RequestVerificationToken';
                    tokenInput.value = token.value;
                    form.appendChild(tokenInput);
                }

                const idInput = document.createElement('input');
                idInput.type = 'hidden';
                idInput.name = 'id';
                idInput.value = invoiceId;
                form.appendChild(idInput);

                document.body.appendChild(form);
                form.submit();
            }
        }

        // Notification functions
        let readNotifications = JSON.parse(localStorage.getItem('admin_readNotifications') || '[]');

        function loadReadNotifications() {
            readNotifications.forEach(function (notificationId) {
                const notification = document.querySelector(`[data-id="${notificationId}"]`);
                if (notification) {
                    notification.style.display = 'none';
                }
            });
            checkForEmptyNotifications();
        }

        function markAsRead(button, type, id) {
            const notificationItem = button.closest('.notification-item');

            if (!readNotifications.includes(id)) {
                readNotifications.push(id);
                localStorage.setItem('admin_readNotifications', JSON.stringify(readNotifications));
            }

            notificationItem.style.transition = 'opacity 0.3s ease';
            notificationItem.style.opacity = '0';

            setTimeout(() => {
                notificationItem.style.display = 'none';
                checkForEmptyNotifications();
            }, 300);
        }

        function markAllAsRead() {
            const notifications = document.querySelectorAll('.notification-item');

            notifications.forEach(function (notification) {
                const id = notification.getAttribute('data-id');
                if (id && !readNotifications.includes(id)) {
                    readNotifications.push(id);
                }

                notification.style.transition = 'opacity 0.3s ease';
                notification.style.opacity = '0';

                setTimeout(() => {
                    notification.style.display = 'none';
                }, 300);
            });

            localStorage.setItem('admin_readNotifications', JSON.stringify(readNotifications));

            setTimeout(() => {
                checkForEmptyNotifications();
            }, 300);
        }

        function checkForEmptyNotifications() {
            const visibleNotifications = document.querySelectorAll('.notification-item[style*="display: none"], .notification-item[style*="opacity: 0"]');
            const allNotifications = document.querySelectorAll('.notification-item');

            if (visibleNotifications.length === allNotifications.length || allNotifications.length === 0) {
                const container = document.getElementById('notificationContainer');
                let emptyState = document.getElementById('noNotifications');

                if (!emptyState && container) {
                    emptyState = document.createElement('div');
                    emptyState.id = 'noNotifications';
                    emptyState.className = 'text-center py-3';
                    emptyState.innerHTML = `
                        <i class="fas fa-bell-slash fa-2x text-muted mb-2"></i>
                        <p class="text-muted">All caught up! No urgent notifications.</p>
                    `;
                    container.appendChild(emptyState);
                } else if (emptyState) {
                    emptyState.style.display = 'block';
                }
            }
        }
    </script>
}

@section Styles {
    <link rel="stylesheet" href="~/css/rbac_dashboard.css" />
    <style>
        /* Enhanced Admin Dashboard Styles */
        .dashboard-container {
            padding: 0 15px;
        }

        .page-header {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            padding: 2rem;
            border-radius: 0.5rem;
            border-left: 4px solid #007bff;
        }

        .page-title {
            font-size: 2rem;
            font-weight: 600;
            color: #2c3e50;
        }

        .page-subtitle {
            font-size: 1rem;
            color: #6c757d;
        }

        /* Stat Cards */
        .stat-card {
            border: none;
            border-radius: 0.75rem;
            box-shadow: 0 2px 10px rgba(0,0,0,0.08);
            transition: all 0.3s ease;
            overflow: hidden;
        }

            .stat-card:hover {
                transform: translateY(-3px);
                box-shadow: 0 8px 25px rgba(0,0,0,0.15);
            }

        .stat-card-primary {
            border-left: 4px solid #007bff;
        }

        .stat-card-warning {
            border-left: 4px solid #ffc107;
        }

        .stat-card-info {
            border-left: 4px solid #17a2b8;
        }

        .stat-card-success {
            border-left: 4px solid #28a745;
        }

        .stat-icon {
            width: 50px;
            height: 50px;
            border-radius: 0.5rem;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.25rem;
        }

        .stat-number {
            font-weight: 700;
            color: #2c3e50;
        }

        .stat-label {
            font-size: 0.875rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            font-weight: 500;
        }

        .stat-details {
            border-top: 1px solid #f1f3f4;
            padding-top: 1rem;
        }

        /* Cards */
        .card {
            border: none;
            border-radius: 0.75rem;
            box-shadow: 0 2px 10px rgba(0,0,0,0.08);
        }

        .card-header {
            background: #f8f9fa !important;
            border-bottom: 1px solid #e9ecef;
            border-radius: 0.75rem 0.75rem 0 0 !important;
        }

        .card-title {
            font-weight: 600;
            color: #2c3e50;
        }

        /* Activity List */
        .activity-list {
            max-height: 200px;
            overflow-y: auto;
        }

        .activity-item {
            display: flex;
            align-items: center;
            padding: 1rem 0;
            border-bottom: 1px solid #f1f3f4;
        }

            .activity-item:last-child {
                border-bottom: none;
                padding-bottom: 0;
            }

        .activity-icon {
            width: 40px;
            height: 40px;
            border-radius: 0.5rem;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 1rem;
            color: white;
        }

        .activity-content h6 {
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 0.25rem;
        }

        /* Quick Action Buttons */
        .quick-action-btn {
            display: block;
            transition: all 0.3s ease;
        }

            .quick-action-btn:hover {
                transform: translateY(-2px);
                text-decoration: none !important;
            }

            .quick-action-btn .card {
                transition: all 0.3s ease;
            }

            .quick-action-btn:hover .card {
                box-shadow: 0 8px 25px rgba(0,0,0,0.15);
            }

        .quick-action-icon {
            width: 50px;
            height: 50px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.25rem;
        }

        /* Financial Overview */
        .financial-overview {
            display: flex;
            flex-direction: column;
            gap: 1.5rem;
        }

        .financial-item {
            display: flex;
            align-items: center;
        }

        .financial-icon {
            width: 50px;
            height: 50px;
            border-radius: 0.5rem;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 1rem;
        }

            .financial-icon i {
                font-size: 1.25rem;
            }

        .financial-content h6 {
            font-size: 0.75rem;
            font-weight: 500;
            color: #6c757d;
            margin-bottom: 0.25rem;
            letter-spacing: 0.5px;
        }

        .financial-content h5 {
            font-weight: 700;
            margin: 0;
        }

        /* Quick Links */
        .quick-links {
            display: flex;
            flex-direction: column;
            gap: 0.75rem;
        }

        .quick-link-item {
            display: flex;
            align-items: center;
            padding: 1rem;
            background: #f8f9fa;
            border-radius: 0.5rem;
            text-decoration: none;
            color: #495057;
            transition: all 0.3s ease;
            border: 1px solid #e9ecef;
        }

            .quick-link-item:hover {
                background: #e9ecef;
                color: #495057;
                text-decoration: none;
                transform: translateX(5px);
                border-color: #dee2e6;
            }

            .quick-link-item i:first-child {
                margin-right: 1rem;
                font-size: 1.1rem;
                width: 20px;
                text-align: center;
            }

            .quick-link-item span {
                flex: 1;
                font-weight: 500;
            }

            .quick-link-item i:last-child {
                font-size: 0.8rem;
                opacity: 0.6;
            }

        /* Table Styling */
        .table thead th {
            font-weight: 600;
            color: #495057;
            font-size: 0.875rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .table tbody tr:hover {
            background-color: rgba(0,123,255,0.05);
        }

        /* Button Groups */
        .btn-group .btn {
            border-radius: 0.375rem;
            margin-right: 0.25rem;
        }

            .btn-group .btn:last-child {
                margin-right: 0;
            }

        /* Badge Styling */
        .badge {
            font-weight: 500;
            padding: 0.5em 0.75em;
        }

        /* Progress Bars */
        .progress {
            border-radius: 10px;
            background-color: #e9ecef;
        }

        .progress-bar {
            border-radius: 10px;
        }

        /* Responsive Design */
        @@media (max-width: 768px) {
            .dashboard-container

        {
            padding: 0 10px;
        }

        .page-header {
            padding: 1.5rem;
            margin-bottom: 1rem;
        }

        .page-title {
            font-size: 1.5rem;
        }

        .stat-card .card-body {
            padding: 1.5rem;
        }

        .stat-icon {
            width: 40px;
            height: 40px;
            font-size: 1rem;
        }

        .financial-item,
        .activity-item {
            padding: 0.75rem 0;
        }

        .financial-icon,
        .activity-icon {
            width: 35px;
            height: 35px;
        }

        .btn-group {
            display: flex;
            flex-direction: column;
            gap: 0.25rem;
        }

            .btn-group .btn {
                margin-right: 0;
            }

        .quick-action-btn .card-body {
            padding: 2rem 1.5rem;
        }

        .quick-action-icon {
            width: 40px;
            height: 40px;
            font-size: 1rem;
        }

        }

        @@media (max-width: 576px) {
            .page-header .d-flex

        {
            text-align: center;
        }

        .stat-number {
            font-size: 1.25rem;
        }

        .financial-content h5 {
            font-size: 1.1rem;
        }

        .card-body {
            padding: 1rem;
        }

        .quick-link-item {
            padding: 0.75rem;
        }

        }

        /* Loading Animation */
        .fa-spin {
            animation: fa-spin 2s infinite linear;
        }

        @@keyframes fa-spin {
            0%

        {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }

        }

        /* Smooth Transitions */
        * {
            transition: box-shadow 0.15s ease-in-out;
        }

        /* Focus States */
        .btn:focus,
        .card:focus-within {
            box-shadow: 0 0 0 0.2rem rgba(0,123,255,0.25);
        }

        /* Custom Scrollbar */
        .activity-list::-webkit-scrollbar {
            width: 4px;
        }

        .activity-list::-webkit-scrollbar-track {
            background: #f1f1f1;
            border-radius: 10px;
        }

        .activity-list::-webkit-scrollbar-thumb {
            background: #c1c1c1;
            border-radius: 10px;
        }

            .activity-list::-webkit-scrollbar-thumb:hover {
                background: #a8a8a8;
            }

        /* Enhanced Visual Hierarchy */
        .card-header h5,
        .card-header h6 {
            color: #2c3e50;
        }

        .text-muted {
            color: #6c757d !important;
        }

        /* Better spacing for mobile */
        @@media (max-width: 991px) {
            .col-lg-4

        {
            margin-top: 1rem;
        }

        }

        /* Print styles */
        @@media print {
            .btn, .dropdown, .quick-action-btn

        {
            display: none !important;
        }

        .card {
            box-shadow: none !important;
            border: 1px solid #dee2e6 !important;
        }

        .page-header {
            background: none !important;
            border: 1px solid #dee2e6 !important;
        }

        }
    </style>
}