@model FinserveNew.Models.Invoice
@{
    ViewData["Title"] = "Edit Invoice";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2 class="page-title mb-0">Edit Invoice - @Model.InvoiceNumber</h2>
    <div>
        <a asp-action="Details" asp-route-id="@Model.InvoiceID" class="btn btn-outline-info me-2">
            <i class="fas fa-eye me-2"></i>View Details
        </a>
        <a asp-action="Index" class="btn btn-outline-secondary">
            <i class="fas fa-arrow-left me-2"></i>Back to List
        </a>
    </div>
</div>

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        <h6><i class="fas fa-exclamation-triangle me-2"></i>Please correct the following errors:</h6>
        <div asp-validation-summary="All" class="text-danger mb-0"></div>
    </div>
}

<div class="card">
    <div class="card-header bg-light">
        <div class="row">
            <div class="col-md-6">
                <h6 class="card-title mb-1">
                    <i class="fas fa-edit me-2"></i>Invoice Information
                </h6>
                <small class="text-muted">Invoice Number: @Model.InvoiceNumber</small>
            </div>
            <div class="col-md-6 text-end">
                <span class="badge @Model.StatusBadgeClass fs-6">@Model.Status</span>
                <br />
                <small class="text-muted">Created: @Model.IssueDate.ToString("dd MMM yyyy")</small>
            </div>
        </div>
    </div>
    <div class="card-body">
        <form asp-action="Edit" method="post" enctype="multipart/form-data">
            <input asp-for="InvoiceID" type="hidden" />
            <input asp-for="InvoiceNumber" type="hidden" />
            <input asp-for="Status" type="hidden" />
            <input asp-for="IssueDate" type="hidden" />

            <div class="row">
                <!-- Left Column -->
                <div class="col-md-6">
                    <div class="mb-3">
                        <label class="form-label">
                            <i class="fas fa-calendar me-2"></i>Issue Date
                        </label>
                        <input value="@Model.IssueDate.ToString("yyyy-MM-dd")" class="form-control" type="date" readonly />
                        <div class="form-text">Issue date cannot be changed after creation.</div>
                    </div>

                    <div class="mb-3">
                        <label asp-for="DueDate" class="form-label">
                            <i class="fas fa-calendar-check me-2"></i>Due Date
                        </label>
                        <input asp-for="DueDate" class="form-control" type="date" />
                        <span asp-validation-for="DueDate" class="text-danger"></span>
                        @if (Model.DueDate < DateTime.Now && Model.Status == "Pending")
                        {
                            <div class="form-text text-danger">
                                <i class="fas fa-exclamation-triangle me-1"></i>This invoice is overdue!
                            </div>
                        }
                    </div>

                    <div class="row">
                        <div class="col-md-8">
                            <div class="mb-3">
                                <label asp-for="TotalAmount" class="form-label">
                                    <i class="fas fa-dollar-sign me-2"></i>Total Amount
                                </label>
                                <input asp-for="TotalAmount" class="form-control" type="number" step="0.01" min="0" />
                                <span asp-validation-for="TotalAmount" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="mb-3">
                                <label asp-for="Currency" class="form-label">Currency</label>
                                <select asp-for="Currency" class="form-select">
                                    <option value="MYR">MYR</option>
                                    <option value="USD">USD</option>
    
                                </select>
                                <span asp-validation-for="Currency" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Year" class="form-label">
                            <i class="fas fa-calendar-alt me-2"></i>Year
                        </label>
                        <input asp-for="Year" class="form-control" type="number" readonly />
                        <div class="form-text">Year is automatically set based on issue date.</div>
                    </div>
                </div>

                <!-- Right Column -->
                <div class="col-md-6">
                    <!-- Current File Display -->
                    @if (!string.IsNullOrEmpty(Model.FilePath))
                    {
                        <div class="mb-3">
                            <label class="form-label">
                                <i class="fas fa-file me-2"></i>Current File
                            </label>
                            <div class="card bg-light">
                                <div class="card-body py-2">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div>
                                            <i class="fas fa-file-pdf text-danger me-2"></i>
                                            <span>Invoice File</span>
                                        </div>
                                        <a href="@Model.FilePath" target="_blank" class="btn btn-sm btn-outline-primary">
                                            <i class="fas fa-external-link-alt"></i> View
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }

                    <div class="mb-3">
                        <label for="invoiceFile" class="form-label">
                            <i class="fas fa-file-upload me-2"></i>
                            @(string.IsNullOrEmpty(Model.FilePath) ? "Upload Invoice File" : "Replace Invoice File")
                        </label>
                        <input type="file" class="form-control" id="invoiceFile" name="invoiceFile" accept=".pdf,.jpg,.jpeg,.png" />
                        <div class="form-text">
                            <i class="fas fa-info-circle me-1"></i>
                            Leave empty to keep current file. Supported formats: PDF, JPG, PNG (Max 5MB)
                        </div>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Remark" class="form-label">
                            <i class="fas fa-sticky-note me-2"></i>Remarks
                        </label>
                        <textarea asp-for="Remark" class="form-control" rows="4" placeholder="Enter any additional remarks or notes..."></textarea>
                        <span asp-validation-for="Remark" class="text-danger"></span>
                    </div>

                    <!-- Summary Section -->
                    <div class="card bg-light">
                        <div class="card-body">
                            <h6 class="card-title"><i class="fas fa-info-circle me-2"></i>Invoice Summary</h6>
                            <div class="row">
                             
                                <div class="col-6">
                                    <small class="text-muted">Status:</small>
                                    <p class="mb-1"><span class="badge @Model.StatusBadgeClass">@Model.Status</span></p>
                                </div>
                                <div class="col-6">
                                    <small class="text-muted">Current Total:</small>
                                    <p class="mb-1 fw-bold">@Model.FormattedAmount</p>
                                </div>
                                <div class="col-6">
                                    <small class="text-muted">Days Until Due:</small>
                                    <p class="mb-1 @(Model.DueDate < DateTime.Now ? "text-danger" : "")">
                                        @((Model.DueDate - DateTime.Now).Days) days
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            @if (Model.Status != "Pending")
            {
                <div class="alert alert-warning mt-3">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    <strong>Note:</strong> This invoice is in <strong>@Model.Status</strong> status. Some changes may not be allowed after approval.
                </div>
            }

            <hr class="my-4" />

            <div class="d-flex justify-content-between">
                <div>
                    <a asp-action="Index" class="btn btn-outline-secondary me-2">
                        <i class="fas fa-times me-2"></i>Cancel
                    </a>
                    @if (Model.CanDelete)
                    {
                        <a asp-action="Delete" asp-route-id="@Model.InvoiceID" class="btn btn-outline-danger">
                            <i class="fas fa-trash me-2"></i>Delete
                        </a>
                    }
                </div>
                <button type="submit" class="btn btn-success">
                    <i class="fas fa-save me-2"></i>Update Invoice
                </button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function() {
            // File upload validation
            $('#invoiceFile').on('change', function() {
                var file = this.files[0];
                if (file) {
                    if (file.size > 5 * 1024 * 1024) { // 5MB
                        alert('File size must be less than 5MB');
                        $(this).val('');
                        return;
                    }

                    var validTypes = ['application/pdf', 'image/jpeg', 'image/png', 'image/jpg'];
                    if (!validTypes.includes(file.type)) {
                        alert('Please select a valid file type (PDF, JPG, PNG)');
                        $(this).val('');
                        return;
                    }
                }
            });

            // Warn user about unsaved changes
            var formChanged = false;
            $('form input, form textarea, form select').on('change', function() {
                formChanged = true;
            });

            $(window).on('beforeunload', function() {
                if (formChanged) {
                    return 'You have unsaved changes. Are you sure you want to leave?';
                }
            });

            $('form').on('submit', function() {
                formChanged = false;
            });
        });
    </script>
}