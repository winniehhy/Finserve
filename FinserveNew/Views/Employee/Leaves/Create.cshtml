@model FinserveNew.Models.LeaveModel

@{
    ViewData["Title"] = "Apply for Leave";

    // Create leave types list if not provided by controller
    var leaveTypes = ViewData["LeaveTypeID"] as IEnumerable<SelectListItem> ?? new List<SelectListItem>
    {
        new SelectListItem { Value = "1", Text = "Annual Leave" },
        new SelectListItem { Value = "2", Text = "Medical Leave" },
        new SelectListItem { Value = "3", Text = "Hospitalization Leave" }
    };
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2 class="page-title mb-0">Apply for Leave</h2>
    <a href="/Leaves/LeaveRecords" class="btn btn-secondary">
        <i class="fas fa-arrow-left me-2"></i>
        Back to My Leaves
    </a>
</div>

<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                <h4 class="card-title">Leave Application Form</h4>
            </div>
            <div class="card-body">
                <form asp-action="Create" method="post" enctype="multipart/form-data">
                    <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label asp-for="LeaveTypeID" class="form-label">Leave Type <span class="text-danger">*</span></label>
                            <select asp-for="LeaveTypeID" asp-items="leaveTypes" class="form-select" id="LeaveTypeID" required>
                                <option value="">-- Select Leave Type --</option>
                            </select>
                            <span asp-validation-for="LeaveTypeID" class="text-danger"></span>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Available Days</label>
                            <div id="availableDays" class="form-control bg-light text-muted">
                                Select a leave type to see available days
                            </div>
                        </div>
                    </div>

                    <!-- Medical Certificate Upload Section (Hidden by default) -->
                    <div class="mb-3" id="medicalCertificateSection" style="display: none;">
                        <div class="alert alert-info">
                            <i class="fas fa-file-medical me-2"></i>
                            <strong>Medical Certificate Required:</strong> Please upload an official medical certificate to support your medical leave application.
                        </div>
                        
                        <label class="form-label">Medical Certificate <span class="text-danger">*</span></label>
                        <input type="file" name="MedicalCertificate" id="MedicalCertificate" 
                               class="form-control" accept=".pdf,.jpg,.jpeg,.png,.doc,.docx" />
                        <div class="form-text">
                            <i class="fas fa-info-circle me-1"></i>
                            Accepted formats: PDF, JPG, PNG, DOC, DOCX (Max size: 5MB)
                        </div>
                        <span id="medicalCertificateError" class="text-danger" style="display: none;"></span>
                        
                        <!-- File preview area -->
                        <div id="filePreview" class="mt-2" style="display: none;">
                            <div class="border rounded p-2 bg-light">
                                <div class="d-flex align-items-center">
                                    <i class="fas fa-file-alt me-2 text-primary"></i>
                                    <span id="fileName" class="me-auto"></span>
                                    <span id="fileSize" class="text-muted small me-2"></span>
                                    <button type="button" class="btn btn-sm btn-outline-danger" id="removeFile">
                                        <i class="fas fa-times"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label asp-for="StartDate" class="form-label">Start Date <span class="text-danger">*</span></label>
                            <input asp-for="StartDate" type="date" class="form-control" id="StartDate" required />
                            <span asp-validation-for="StartDate" class="text-danger"></span>
                        </div>
                        <div class="col-md-6">
                            <label asp-for="EndDate" class="form-label">End Date <span class="text-danger">*</span></label>
                            <input asp-for="EndDate" type="date" class="form-control" id="EndDate" required />
                            <span asp-validation-for="EndDate" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="mb-3">
                        <div class="alert alert-info" id="durationInfo" style="display: none;">
                            <i class="fas fa-info-circle me-2"></i>
                            <strong>Duration:</strong> <span id="calculatedDuration">0</span> day(s)
                            <div id="balanceWarning" style="display: none;" class="mt-2">
                                <i class="fas fa-exclamation-triangle text-warning me-2"></i>
                                <span class="text-warning">Warning: This exceeds your available balance!</span>
                            </div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Reason" class="form-label">Reason <span class="text-danger">*</span></label>
                        <textarea asp-for="Reason" class="form-control" id="Reason" rows="4"
                                  placeholder="Please provide a detailed reason for your leave application" required></textarea>
                        <span asp-validation-for="Reason" class="text-danger"></span>
                    </div>

                    <div class="d-flex justify-content-end gap-2">
                        <a asp-action="LeaveRecords" class="btn btn-secondary">
                            <i class="fas fa-times me-2"></i>Cancel
                        </a>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-paper-plane me-2"></i>Submit Application
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <h5 class="card-title mb-0">
                    <i class="fas fa-chart-bar me-2"></i>Leave Balance Summary
                </h5>
            </div>
            <div class="card-body">
                <div class="mb-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <strong>Annual Leave:</strong>
                        <span class="badge bg-primary">@(ViewBag.AnnualLeaveBalance ?? 0) / 14</span>
                    </div>
                    <div class="progress mt-1" style="height: 8px;">
                        <div class="progress-bar bg-primary" role="progressbar"
                             style="width: @(((ViewBag.AnnualLeaveBalance != null ? (double)ViewBag.AnnualLeaveBalance : 0) / 14) * 100)%"></div>
                    </div>
                </div>
                <div class="mb-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <strong>Medical Leave:</strong>
                        <span class="badge bg-info">@(ViewBag.MedicalLeaveBalance ?? 0) / 10</span>
                    </div>
                    <div class="progress mt-1" style="height: 8px;">
                        <div class="progress-bar bg-info" role="progressbar"
                             style="width: @(((ViewBag.MedicalLeaveBalance != null ? (double)ViewBag.MedicalLeaveBalance : 0) / 10) * 100)%"></div>
                    </div>
                </div>
                <div class="mb-0">
                    <div class="d-flex justify-content-between align-items-center">
                        <strong>Hospitalization Leave:</strong>
                        <span class="badge bg-success">@(ViewBag.HospitalizationLeaveBalance ?? 0) / 16</span>
                    </div>
                    <div class="progress mt-1" style="height: 8px;">
                        <div class="progress-bar bg-success" role="progressbar"
                             style="width: @(((ViewBag.HospitalizationLeaveBalance != null ? (double)ViewBag.HospitalizationLeaveBalance : 0) / 16) * 100)%"></div>
                    </div>
                </div>
            </div>
        </div>

        <div class="card mt-3">
            <div class="card-header">
                <h6 class="card-title mb-0">
                    <i class="fas fa-lightbulb me-2"></i>Tips
                </h6>
            </div>
            <div class="card-body">
                <ul class="list-unstyled mb-0">
                    <li class="mb-2">
                        <i class="fas fa-check text-success me-2"></i>
                        <small>Plan your leave in advance</small>
                    </li>
                    <li class="mb-2">
                        <i class="fas fa-check text-success me-2"></i>
                        <small>Medical leave requires documentation</small>
                    </li>
                    <li class="mb-0">
                        <i class="fas fa-check text-success me-2"></i>
                        <small>Annual leave expires at year-end</small>
                    </li>
                </ul>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function() {
            // FIXED: Use dynamic leave balance data from ViewBag
            const leaveBalances = {
                '1': {
                    maxDays: 14,
                    remaining: @(ViewBag.AnnualLeaveBalance ?? 14)
                },
                '2': {
                    maxDays: 10,
                    remaining: @(ViewBag.MedicalLeaveBalance ?? 10)
                },
                '3': {
                    maxDays: 16,
                    remaining: @(ViewBag.HospitalizationLeaveBalance ?? 16)
                }
            };

            const leaveNames = {
                '1': 'Annual Leave',
                '2': 'Medical Leave',
                '3': 'Hospitalization Leave'
            };

            // File validation settings
            const maxFileSize = 5 * 1024 * 1024; // 5MB
            const allowedExtensions = ['.pdf', '.jpg', '.jpeg', '.png', '.doc', '.docx'];

            // Validate leave type selection
            function isValidLeaveType(leaveTypeId) {
                return ['1', '2', '3'].includes(leaveTypeId);
            }

            // File validation function
            function validateFile(file) {
                if (!file) return { isValid: false, message: 'No file selected' };

                const fileName = file.name.toLowerCase();
                const fileExtension = fileName.substring(fileName.lastIndexOf('.'));
                
                if (!allowedExtensions.includes(fileExtension)) {
                    return { 
                        isValid: false, 
                        message: 'Invalid file type. Please select PDF, JPG, PNG, DOC, or DOCX files only.' 
                    };
                }

                if (file.size > maxFileSize) {
                    return { 
                        isValid: false, 
                        message: 'File size exceeds 5MB limit. Please select a smaller file.' 
                    };
                }

                return { isValid: true, message: '' };
            }

            // Format file size
            function formatFileSize(bytes) {
                if (bytes === 0) return '0 Bytes';
                const k = 1024;
                const sizes = ['Bytes', 'KB', 'MB', 'GB'];
                const i = Math.floor(Math.log(bytes) / Math.log(k));
                return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
            }

            // Handle medical certificate file selection
            $('#MedicalCertificate').on('change', function() {
                const file = this.files[0];
                const errorSpan = $('#medicalCertificateError');
                const filePreview = $('#filePreview');

                if (file) {
                    const validation = validateFile(file);
                    
                    if (!validation.isValid) {
                        errorSpan.text(validation.message).show();
                        filePreview.hide();
                        this.value = ''; // Clear the file input
                        return;
                    }

                    // Hide error and show preview
                    errorSpan.hide();
                    $('#fileName').text(file.name);
                    $('#fileSize').text(formatFileSize(file.size));
                    filePreview.show();
                } else {
                    errorSpan.hide();
                    filePreview.hide();
                }
            });

            // Handle remove file button
            $('#removeFile').on('click', function() {
                $('#MedicalCertificate').val('');
                $('#filePreview').hide();
                $('#medicalCertificateError').hide();
            });

            // Handle leave type selection
            $('#LeaveTypeID').on('change', function() {
                const leaveTypeId = $(this).val();
                const availableDaysDiv = $('#availableDays');
                const medicalCertificateSection = $('#medicalCertificateSection');

                // Show/hide medical certificate section based on leave type
                if (leaveTypeId === '2') { // Medical Leave
                    medicalCertificateSection.show();
                    $('#MedicalCertificate').prop('required', true);
                } else {
                    medicalCertificateSection.hide();
                    $('#MedicalCertificate').prop('required', false);
                    // Clear any selected file when switching away from medical leave
                    $('#MedicalCertificate').val('');
                    $('#filePreview').hide();
                    $('#medicalCertificateError').hide();
                }

                if (!leaveTypeId) {
                    availableDaysDiv.text('Select a leave type to see available days');
                    availableDaysDiv.removeClass('text-danger text-success text-warning').addClass('text-muted');
                    return;
                }

                // Validate leave type
                if (!isValidLeaveType(leaveTypeId)) {
                    availableDaysDiv.text('Invalid leave type selected');
                    availableDaysDiv.removeClass('text-muted text-success text-warning').addClass('text-danger');
                    return;
                }

                const balance = leaveBalances[leaveTypeId];
                const remainingDays = balance.remaining;
                const maxDays = balance.maxDays;

                availableDaysDiv.html(`<strong>${remainingDays}</strong> of ${maxDays} days remaining`);

                // Color coding based on remaining balance
                availableDaysDiv.removeClass('text-muted text-danger text-success text-warning');
                if (remainingDays === 0) {
                    availableDaysDiv.addClass('text-danger');
                } else if (remainingDays < 3) {
                    availableDaysDiv.addClass('text-warning');
                } else {
                    availableDaysDiv.addClass('text-success');
                }

                calculateDuration();
            });

            // Handle date changes
            $('#StartDate, #EndDate').on('change', function() {
                calculateDuration();
            });

            // Calculate duration function
            function calculateDuration() {
                const startDate = $('#StartDate').val();
                const endDate = $('#EndDate').val();
                const leaveTypeId = $('#LeaveTypeID').val();

                if (startDate && endDate) {
                    const start = new Date(startDate);
                    const end = new Date(endDate);

                    if (end >= start) {
                        const timeDiff = end.getTime() - start.getTime();
                        const daysDiff = Math.ceil(timeDiff / (1000 * 3600 * 24)) + 1;

                        $('#calculatedDuration').text(daysDiff);
                        $('#durationInfo').show();

                        // Check if duration exceeds available balance
                        if (isValidLeaveType(leaveTypeId) && leaveBalances[leaveTypeId] !== undefined) {
                            const availableBalance = leaveBalances[leaveTypeId].remaining;

                            if (daysDiff > availableBalance) {
                                $('#balanceWarning').show();
                                $('#durationInfo').removeClass('alert-info').addClass('alert-warning');
                            } else {
                                $('#balanceWarning').hide();
                                $('#durationInfo').removeClass('alert-warning').addClass('alert-info');
                            }
                        }
                    } else {
                        $('#durationInfo').hide();
                    }
                } else {
                    $('#durationInfo').hide();
                }
            }

            // Set minimum date to today
            const today = new Date().toISOString().split('T')[0];
            $('#StartDate').attr('min', today);

            // Update end date minimum when start date changes
            $('#StartDate').on('change', function() {
                $('#EndDate').attr('min', $(this).val());
                if ($('#EndDate').val() && $('#EndDate').val() < $(this).val()) {
                    $('#EndDate').val($(this).val());
                }
                calculateDuration();
            });

            // Form validation before submission
            $('form').on('submit', function(e) {
                const leaveTypeId = $('#LeaveTypeID').val();
                const startDate = $('#StartDate').val();
                const endDate = $('#EndDate').val();
                const reason = $('#Reason').val().trim();

                // Check if form is valid according to HTML5 validation
                const form = this;
                if (!form.checkValidity()) {
                    return true;
                }

                // Validate leave type
                if (!isValidLeaveType(leaveTypeId)) {
                    e.preventDefault();
                    alert('Please select a valid leave type (Annual Leave, Medical Leave, or Hospitalization Leave).');
                    $('#LeaveTypeID').focus();
                    return false;
                }

                // Medical leave specific validation
                if (leaveTypeId === '2') {
                    const medicalCertFile = $('#MedicalCertificate')[0].files[0];
                    if (!medicalCertFile) {
                        e.preventDefault();
                        alert('Please upload a medical certificate for medical leave applications.');
                        $('#MedicalCertificate').focus();
                        return false;
                    }

                    const validation = validateFile(medicalCertFile);
                    if (!validation.isValid) {
                        e.preventDefault();
                        alert('Medical certificate validation failed: ' + validation.message);
                        $('#MedicalCertificate').focus();
                        return false;
                    }
                }

                if (!startDate || !endDate) {
                    e.preventDefault();
                    alert('Please select both start and end dates.');
                    if (!startDate) $('#StartDate').focus();
                    else $('#EndDate').focus();
                    return false;
                }

                if (!reason) {
                    e.preventDefault();
                    alert('Please provide a reason for your leave.');
                    $('#Reason').focus();
                    return false;
                }

                // Date validation
                const start = new Date(startDate);
                const end = new Date(endDate);

                if (end < start) {
                    e.preventDefault();
                    alert('End date must be after or equal to start date.');
                    $('#EndDate').focus();
                    return false;
                }

                // Balance validation
                const timeDiff = end.getTime() - start.getTime();
                const daysDiff = Math.ceil(timeDiff / (1000 * 3600 * 24)) + 1;
                const availableBalance = leaveBalances[leaveTypeId].remaining;

                if (daysDiff > availableBalance) {
                    e.preventDefault();
                    const leaveName = leaveNames[leaveTypeId];
                    const confirmMsg = `You are requesting ${daysDiff} days but only have ${availableBalance} days remaining for ${leaveName}.\n\nDo you want to proceed anyway?`;

                    if (!confirm(confirmMsg)) {
                        return false;
                    } else {
                        // Re-submit the form programmatically
                        setTimeout(() => {
                            $(this).off('submit').submit();
                        }, 100);
                        return false;
                    }
                }

                // Show loading state
                const submitBtn = $(this).find('button[type="submit"]');
                submitBtn
                    .prop('disabled', true)
                    .html('<i class="fas fa-spinner fa-spin me-2"></i>Submitting...');

                return true;
            });

            // Auto-resize textarea
            $('#Reason').on('input', function() {
                this.style.height = 'auto';
                this.style.height = (this.scrollHeight) + 'px';
            });

            // Initialize the form - trigger change event on page load if Annual Leave is pre-selected
            if ($('#LeaveTypeID').val()) {
                $('#LeaveTypeID').trigger('change');
            }
        });
    </script>
}