@model IEnumerable<FinserveNew.Models.LeaveModel>

@{
    ViewData["Title"] = "My Leaves";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2 class="page-title mb-0">My Leaves</h2>
    <div class="btn-group" role="group">
        <a href="/Leaves/Create" class="btn btn-primary">
            <i class="fas fa-plus me-2"></i>
            Apply for Leave
        </a>
        <a href="/Leaves/UnpaidLeaveRequests" class="btn btn-outline-secondary">
            <i class="fas fa-file-invoice me-2"></i>
            Unpaid Leave Records
        </a>
    </div>
</div>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["Success"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["LeaveReminder"] != null)
{
    <div class="alert alert-warning alert-dismissible fade show" role="alert">
        @TempData["LeaveReminder"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<div class="row mb-4">
    @if (ViewBag.LeaveBalances != null)
    {
        foreach (var balance in ViewBag.LeaveBalances)
        {
            var balanceData = balance.Value;
            var typeName = balance.Key;
            var remainingDays = balanceData.RemainingDays;
            var defaultDays = balanceData.DefaultDays;
            var usedDays = balanceData.UsedDays;
            
            <div class="col-md-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">@typeName</h5>
                        <p class="card-text">
                            <span class="fs-4">@remainingDays</span> / @defaultDays days remaining
                        </p>
                        <small class="text-muted">Used: @usedDays days</small>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <!-- Fallback display if ViewBag.LeaveBalances is null -->
        <div class="col-md-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Annual Leave</h5>
                    <p class="card-text">
                        <span class="fs-4">14</span> / 14 days remaining
                    </p>
                </div>
            </div>
        </div>
        
        <div class="col-md-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Medical Leave</h5>
                    <p class="card-text">
                        <span class="fs-4">10</span> / 10 days remaining
                    </p>
                </div>
            </div>
        </div>
        
        <div class="col-md-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Hospitalization Leave</h5>
                    <p class="card-text">
                        <span class="fs-4">16</span> / 16 days remaining
                    </p>
                </div>
            </div>
        </div>
    }
</div>

<!-- Filter Section -->
<div class="card mb-4">
    <div class="card-body">
        <div class="row">
            <div class="col-md-6">
                <label for="statusFilter" class="form-label">Filter by Status:</label>
                <select id="statusFilter" class="form-select">
                    <option value="">All Status</option>
                    <option value="Pending">Pending</option>
                    <option value="Approved">Approved</option>
                    <option value="Rejected">Rejected</option>
                </select>
            </div>
            <div class="col-md-6">
                <label for="yearFilter" class="form-label">Filter by Year:</label>
                <select id="yearFilter" class="form-select">
                    <option value="">All Years</option>
                    @{
                        var currentYear = DateTime.Now.Year;
                        for (int year = currentYear; year >= currentYear - 5; year--)
                        {
                            <option value="@year">@year</option>
                        }
                    }
                </select>
            </div>
        </div>
        <div class="row mt-3">
            <div class="col-12">
                <button id="clearFilters" class="btn btn-outline-secondary btn-sm">
                    <i class="fas fa-times me-1"></i>Clear Filters
                </button>
                <small class="text-muted ms-3">
                    <span id="recordCount">@(Model?.Count() ?? 0)</span> record(s) found
                </small>
            </div>
        </div>
    </div>
</div>

<div class="form-container">
    @if (Model != null && Model.Any())
    {
        <div class="table-responsive">
            <table class="table table-hover" id="leaveTable">
                <thead class="table-light">
                    <tr>
                        <th>Leave ID</th>
                        <th>Leave Type</th>
                        <th>Start Date</th>
                        <th>End Date</th>
                        <th>Duration</th>
                        <th>Reason</th>
                        <th>Status</th>
                        <th>Applied Date</th>
                        <th>Approved By</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var leave in Model)
                    {
                        <tr data-status="@leave.Status" data-year="@leave.StartDate.Year">
                            <td>
                                #LVE-@leave.LeaveID
                            </td>
                            <td>
                                <span class="badge bg-info">@leave.LeaveType?.TypeName</span>
                            </td>
                            <td>@leave.StartDate.ToString("dd MMM yyyy")</td>
                            <td>@leave.EndDate.ToString("dd MMM yyyy")</td>
                            <td>
                                @{
                                    var duration = leave.LeaveDays > 0 ? leave.LeaveDays : 
                                                  (leave.EndDate.DayNumber - leave.StartDate.DayNumber) + 1;
                                }
                                @duration day@(duration != 1 ? "s" : "")
                            </td>
                            <td>
                                <span class="text-truncate d-inline-block" style="max-width: 200px;" title="@leave.Reason">
                                    @(leave.Reason?.Length > 50 ? leave.Reason.Substring(0, 50) + "..." : leave.Reason)
                                </span>
                            </td>
                            <td>
                                @if (leave.Status == "Pending")
                                {
                                    <span class="badge bg-warning">@leave.Status</span>
                                }
                                else if (leave.Status == "Approved")
                                {
                                    <span class="badge bg-success">@leave.Status</span>
                                }
                                else
                                {
                                    <span class="badge bg-danger">@leave.Status</span>
                                }
                            </td>
                            <td>
                                @if (leave.SubmissionDate != DateTime.MinValue)
                                {
                                    @leave.SubmissionDate.ToString("dd MMM yyyy")
                                }
                                else
                                {
                                    <text>N/A</text>
                                }
                            </td>
                            <td>@(leave.ApprovedBy ?? "N/A")</td>
                            <td>
                                @if (leave.Status == "Pending")
                                {
                                     <a asp-action="Details" asp-route-id="@leave.LeaveID" class="btn btn-sm btn-outline-primary" title="View Details">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                    <a asp-action="Edit" asp-route-id="@leave.LeaveID" class="btn btn-sm btn-outline-success" title="Edit">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <a asp-action="Delete" asp-route-id="@leave.LeaveID" class="btn btn-sm btn-outline-danger" title="Cancel">
                                        <i class="fas fa-times"></i>
                                    </a>
                                }
                                else
                                {
                                     <a asp-action="Details" asp-route-id="@leave.LeaveID" class="btn btn-sm btn-outline-primary" title="View Details">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="text-center py-5" id="noRecordsMessage">
            <i class="fas fa-calendar-alt fa-3x text-muted mb-3"></i>
            <h5 class="text-muted">No leave records found</h5>
            <p class="text-muted">You haven't applied for any leave yet.</p>
        </div>
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Filter functionality
            function filterTable() {
                const statusFilter = $('#statusFilter').val().toLowerCase();
                const yearFilter = $('#yearFilter').val();
                let visibleCount = 0;

                $('#leaveTable tbody tr').each(function() {
                    const row = $(this);
                    const status = row.data('status').toLowerCase();
                    const year = row.data('year').toString();

                    let showRow = true;

                    // Status filter
                    if (statusFilter && status !== statusFilter) {
                        showRow = false;
                    }

                    // Year filter
                    if (yearFilter && year !== yearFilter) {
                        showRow = false;
                    }

                    if (showRow) {
                        row.show();
                        visibleCount++;
                    } else {
                        row.hide();
                    }
                });

                // Update record count
                $('#recordCount').text(visibleCount);

                // Show/hide no records message
                if (visibleCount === 0) {
                    $('#leaveTable').hide();
                    $('#noRecordsMessage').show();
                } else {
                    $('#leaveTable').show();
                    $('#noRecordsMessage').hide();
                }
            }

            // Event listeners for filters
            $('#statusFilter, #yearFilter').on('change', filterTable);

            // Clear filters
            $('#clearFilters').on('click', function() {
                $('#statusFilter').val('');
                $('#yearFilter').val('');
                filterTable();
            });

            // Check if today is December 1st and show reminder if needed
            const today = new Date();
            if (today.getMonth() === 11 && today.getDate() === 1) {
                @if (ViewBag.LeaveBalances != null)
                {
                    var hasHighBalance = false;
                    foreach (var balance in ViewBag.LeaveBalances)
                    {
                        var remainingDays = balance.Value.RemainingDays;
                        if (remainingDays > 10)
                        {
                            hasHighBalance = true;
                            break;
                        }
                    }
                    
                    if (hasHighBalance)
                    {
                        <text>
                        // Check if reminder was already dismissed for this session
                        if (!sessionStorage.getItem('leaveReminderDismissed')) {
                            const reminderText = "Reminder: You have more than 10 days of leave balance remaining. Please consider clearing your leave before the end of the year.";

                            // Show as an alert instead of using localStorage
                            if (confirm(reminderText + "\n\nWould you like to apply for leave now?")) {
                                window.location.href = '/Leaves/Create';
                            }

                            // Mark as dismissed for this session
                            sessionStorage.setItem('leaveReminderDismissed', 'true');
                        }
                        </text>
                    }
                }
            }

            // Handle alert dismissal
            $('.alert .btn-close').on('click', function() {
                if ($(this).closest('.alert').hasClass('alert-warning')) {
                    // Mark warning alerts as dismissed for this session
                    sessionStorage.setItem('leaveReminderDismissed', 'true');
                }
            });

            // Add confirmation for delete actions
            $('a[title="Cancel"]').on('click', function(e) {
                if (!confirm('Are you sure you want to cancel this leave application?')) {
                    e.preventDefault();
                }
            });

            // Auto-hide success messages after 5 seconds
            setTimeout(function() {
                $('.alert-success').fadeOut('slow');
            }, 5000);
        });
    </script>
}