@model FinserveNew.Models.ViewModels.AddEmployeeViewModel
@{
    ViewData["Title"] = "Add New Employee";
}
@{
    string dobValue = Model.DateOfBirth == DateOnly.MinValue ? "" : Model.DateOfBirth.ToString("yyyy-MM-dd");
    string joinValue = Model.JoinDate == DateOnly.MinValue ? "" : Model.JoinDate.ToString("yyyy-MM-dd");
}

<div class="container mt-4">
    <h2>Add New Employee</h2>

    <form asp-action="Add" method="post" enctype="multipart/form-data">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <div class="card mb-4">
            <div class="card-header">
                <h4>Personal Details</h4>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label asp-for="FirstName" class="control-label">First Name</label>
                        <input asp-for="FirstName" class="form-control" required />
                        <small><span asp-validation-for="FirstName" class="text-danger"></span></small>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label asp-for="LastName" class="control-label">Last Name</label>
                        <input asp-for="LastName" class="form-control" required />
                        <small><span asp-validation-for="LastName" class="text-danger"></span></small>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label asp-for="Nationality" class="control-label">Nationality</label>
                        <select asp-for="Nationality" id="nationalitySelect" class="form-select select2-dropdown" required>
                            <option value="">-- Select Nationality --</option>
                            @foreach (var nationality in Model.Nationalities)
                            {
                                <option value="@nationality">@nationality</option>
                            }
                        </select>
                        <small><span asp-validation-for="Nationality" class="text-danger"></span></small>
                    </div>
                    <div class="col-md-6 mb-3" id="icContainer">
                        <label asp-for="IC" class="control-label">IC Number</label>
                        <input asp-for="IC" class="form-control" id="icInput" />
                        <small><span asp-validation-for="IC" class="text-danger"></span></small>
                    </div>
                    <div class="col-md-6 mb-3" id="passportContainer" style="display: none;">
                        <label asp-for="PassportNumber" class="control-label">Passport Number</label>
                        <input asp-for="PassportNumber" class="form-control" id="passportInput" />
                        <small><span asp-validation-for="PassportNumber" class="text-danger"></span></small>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label asp-for="DateOfBirth" class="control-label">Date of Birth</label>
                        <input asp-for="DateOfBirth" class="form-control" type="date" required value="@dobValue" />
                        <small><span asp-validation-for="DateOfBirth" class="text-danger"></span></small>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label asp-for="Email" class="control-label">Email</label>
                        <input asp-for="Email" class="form-control" type="email" required />
                        <small><span asp-validation-for="Email" class="text-danger"></span></small>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label asp-for="TelephoneNumber" class="control-label">Telephone Number</label>
                        <input asp-for="TelephoneNumber" class="form-control" required />
                        <small><span asp-validation-for="TelephoneNumber" class="text-danger"></span></small>
                    </div>
                </div>
            </div>
        </div>

        <div class="card mb-4">
            <div class="card-header">
                <h4>Employment Details</h4>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label asp-for="JoinDate" class="control-label">Join Date</label>
                        <input asp-for="JoinDate" class="form-control" type="date" required value="@joinValue" />
                        <small><span asp-validation-for="JoinDate" class="text-danger"></span></small>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label asp-for="Position" class="control-label">Position</label>
                        <input asp-for="Position" class="form-control" required />
                        <small><span asp-validation-for="Position" class="text-danger"></span></small>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label asp-for="ConfirmationStatus" class="control-label">Confirmation Status</label>
                        <select asp-for="ConfirmationStatus" class="form-select" required>
                            <option value="Pending">Pending</option>
                            <option value="Probation">Probation</option>
                            <option value="Confirmed">Confirmed</option>
                            <option value="Terminated">Terminated</option>
                        </select>
                        <small><span asp-validation-for="ConfirmationStatus" class="text-danger"></span></small>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label asp-for="RoleID" class="control-label">Role</label>
                        <select asp-for="RoleID" asp-items="Model.AvailableRoles" class="form-select" required>
                            <option value="">-- Select Role --</option>
                        </select>
                        <small><span asp-validation-for="RoleID" class="text-danger"></span></small>
                    </div>
                </div>
            </div>
        </div>

        <div class="card mb-4">
            <div class="card-header">
                <h4>Bank Information</h4>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label asp-for="BankName" class="control-label">Bank Name</label>
                        <select asp-for="BankName" id="bankDropdown" class="form-select select2-dropdown" required>
                            <option value="">-- Select Bank --</option>
                            @foreach (var bank in Model.BankNames)
                            {
                                <option value="@bank">@bank</option>
                            }
                        </select>
                        <small><span asp-validation-for="BankName" class="text-danger"></span></small>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label asp-for="BankType" class="control-label">Account Type</label>
                        <select asp-for="BankType" class="form-select" required>
                            <option value="">-- Select Type --</option>
                            @foreach (var type in Model.BankTypes)
                            {
                                <option value="@type">@type</option>
                            }
                        </select>
                        <small><span asp-validation-for="BankType" class="text-danger"></span></small>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label asp-for="BankAccountNumber" class="control-label">Bank Account Number</label>
                        <input asp-for="BankAccountNumber" class="form-control" required />
                        <small><span asp-validation-for="BankAccountNumber" class="text-danger"></span></small>
                    </div>
                </div>
            </div>
        </div>

        <div class="card mb-4">
            <div class="card-header">
                <h4>Statutory Information</h4>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label asp-for="IncomeTaxNumber" class="control-label">Income Tax Number</label>
                        <input asp-for="IncomeTaxNumber" class="form-control" required />
                        <small><span asp-validation-for="IncomeTaxNumber" class="text-danger"></span></small>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label asp-for="EPFNumber" class="control-label">EPF (Employee Provident Fund) Number</label>
                        <input asp-for="EPFNumber" class="form-control" required />
                        <small><span asp-validation-for="EPFNumber" class="text-danger"></span></small>
                    </div>
                </div>
            </div>
        </div>

        <div class="card mb-4">
            <div class="card-header">
                <h4>Emergency Contact Information</h4>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label asp-for="EmergencyContactName" class="control-label">Full Name</label>
                        <input asp-for="EmergencyContactName" class="form-control" required />
                        <small><span asp-validation-for="EmergencyContactName" class="text-danger"></span></small>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label asp-for="EmergencyContactPhone" class="control-label">Contact Number</label>
                        <input asp-for="EmergencyContactPhone" class="form-control" required />
                        <small><span asp-validation-for="EmergencyContactPhone" class="text-danger"></span></small>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label asp-for="EmergencyContactRelationship" class="control-label">Relationship</label>
                        <select asp-for="EmergencyContactRelationship" class="form-select select2-dropdown" required>
                            <option value="">-- Select Relationship --</option>
                            @foreach (var relationship in Model.Relationships)
                            {
                                <option value="@relationship">@relationship</option>
                            }
                        </select>
                        <small><span asp-validation-for="EmergencyContactRelationship" class="text-danger"></span></small>
                    </div>
                </div>
            </div>
        </div>

        <div class="card mb-4">
            <div class="card-header">
                <h4>Documents</h4>
            </div>
            <div class="card-body">
                <label class="form-label fw-bold">Upload Documents</label>
                <div id="dropZone" class="border rounded bg-light p-4 text-center" style="cursor:pointer;">
                    <i class="fas fa-cloud-upload-alt fa-2x text-primary mb-2"></i>
                    <div>Drag & drop files here or <span class="text-primary" style="text-decoration:underline;cursor:pointer;" id="browseFiles">browse</span></div>
                    <small class="text-muted">Supported: PDF, JPG, PNG, DOC, DOCX. Max 5MB each.</small>
                    <input type="file" id="fileInput" multiple style="display:none;" accept=".pdf,.jpg,.jpeg,.png,.doc,.docx" />
                </div>
                <div id="fileList" class="mt-3"></div>
            </div>
        </div>

        <div class="form-group text-center">
            <button type="submit" class="btn btn-primary">Add Employee</button>
            <a asp-action="AllAccounts" class="btn btn-secondary">Cancel</a>
        </div>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <!-- Add Select2 library -->
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/select2-bootstrap-5-theme@1.3.0/dist/select2-bootstrap-5-theme.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

    <script>
        $(document).ready(function() {
            // Initialize Select2
            initializeSelect2();

            // Nationality change handler to toggle between IC and Passport fields
            $('#nationalitySelect').on('change', function() {
                const selectedNationality = $(this).val();
                const isMalaysian = selectedNationality === 'Malaysia';

                // Toggle visibility of fields
                if (isMalaysian) {
                    $('#icContainer').show();
                    $('#passportContainer').hide();
                    $('#icInput').prop('required', true);
                    $('#passportInput').prop('required', false);
                } else {
                    $('#icContainer').hide();
                    $('#passportContainer').show();
                    $('#icInput').prop('required', false);
                    $('#passportInput').prop('required', true);
                }
            });

            // Trigger change on page load to set initial state
            $('#nationalitySelect').trigger('change');
                        
            function initializeSelect2() {
                // Initialize Select2 for searchable dropdowns
                $('.select2-dropdown').select2({
                    theme: 'bootstrap-5',
                    width: '100%',
                    placeholder: function() {
                        return $(this).data('placeholder') || 'Select option';
                    },
                    allowClear: false,
                    dropdownParent: $('body')
                });

                // Ensure the Select2 matches Bootstrap styling
                setTimeout(function() {
                    // Fix any height inconsistencies
                    $('.select2-selection--single').css({
                        'height': 'calc(1.5em + 0.75rem + 2px)',
                        'padding': '0.375rem 0.75rem',
                        'padding-left': '0.75rem',
                        'line-height': '1.5'
                    });

                    // Fix the alignment of the select arrow
                    $('.select2-selection__arrow').css({
                        'height': '100%',
                        'top': '0',
                        'right': '0.75rem'
                    });

                    // Fix the text alignment and padding
                    $('.select2-selection__rendered').css({
                        'line-height': '1.5',
                        'padding-left': '0',
                        'padding-right': '0.75rem',
                        'color': '#212529'
                    });

                    // Make the Select2 container match Bootstrap form-control focus style
                    $('.select2-container--bootstrap-5 .select2-selection').focus(function() {
                        $(this).addClass('focus');
                    }).blur(function() {
                        $(this).removeClass('focus');
                    });

                    // Apply the same border-radius as other form elements
                    $('.select2-selection').css('border-radius', '0.25rem');

                    // Fix for validation states (if needed)
                    $('.is-invalid + .select2-container .select2-selection').addClass('is-invalid');
                }, 100);
            }
        });

        // Document upload functionality - COMPLETELY FIXED VERSION
        const dropZone = document.getElementById('dropZone');
        const fileInput = document.getElementById('fileInput');
        const browseFiles = document.getElementById('browseFiles');
        const fileList = document.getElementById('fileList');

        // Store files and their document types with persistent state
        let documentsData = [];
        let fileCounter = 0;

        dropZone.addEventListener('click', () => fileInput.click());
        browseFiles.addEventListener('click', (e) => {
            e.preventDefault();
            e.stopPropagation();
            fileInput.click();
        });

        dropZone.addEventListener('dragover', e => {
            e.preventDefault();
            dropZone.classList.add('bg-info', 'text-white');
        });

        dropZone.addEventListener('dragleave', e => {
            e.preventDefault();
            dropZone.classList.remove('bg-info', 'text-white');
        });

        dropZone.addEventListener('drop', e => {
            e.preventDefault();
            dropZone.classList.remove('bg-info', 'text-white');
            handleFiles(e.dataTransfer.files);
        });

        fileInput.addEventListener('change', e => {
            handleFiles(e.target.files);
            e.target.value = ''; // Clear input for reuse
        });

        function handleFiles(selectedFiles) {
            Array.from(selectedFiles).forEach(file => {
                if (validateFile(file)) {
                    const fileId = ++fileCounter;
                    documentsData.push({
                        id: fileId,
                        file: file,
                        documentType: '' // Will be set by user selection
                    });
                }
            });
            renderFileList();
        }

        function validateFile(file) {
            const allowed = ['.pdf', '.jpg', '.jpeg', '.png', '.doc', '.docx'];
            const ext = file.name.substring(file.name.lastIndexOf('.')).toLowerCase();
            if (!allowed.includes(ext)) {
                alert(`File type ${ext} is not supported. Allowed types: ${allowed.join(', ')}`);
                return false;
            }
            if (file.size > 5 * 1024 * 1024) {
                alert(`File ${file.name} exceeds 5MB limit.`);
                return false;
            }
            return true;
        }

        function renderFileList() {
            fileList.innerHTML = '';
            
            documentsData.forEach((docData) => {
                const row = document.createElement('div');
                row.className = 'row mb-2 align-items-center';
                row.setAttribute('data-file-id', docData.id);
                row.innerHTML = `
                    <div class="col-md-1">
                        <i class="fas fa-file-alt text-primary fa-lg"></i>
                    </div>
                    <div class="col-md-4">
                        <span class="fw-medium">${docData.file.name}</span><br>
                        <small class="text-muted">${formatFileSize(docData.file.size)}</small>
                    </div>
                    <div class="col-md-6">
                        <select class="form-select form-select-sm" id="docType_${docData.id}" onchange="updateDocumentType(${docData.id}, this.value)" required>
                            <option value="">Select document type</option>
                            <option value="IC Photo" ${docData.documentType === 'IC Photo' ? 'selected' : ''}>IC Photo</option>
                            <option value="Resume" ${docData.documentType === 'Resume' ? 'selected' : ''}>Resume</option>
                            <option value="Offer Letter" ${docData.documentType === 'Offer Letter' ? 'selected' : ''}>Offer Letter</option>
                            <option value="Certificate" ${docData.documentType === 'Certificate' ? 'selected' : ''}>Certificate</option>
                            <option value="Contract" ${docData.documentType === 'Contract' ? 'selected' : ''}>Contract</option>
                            <option value="Other" ${docData.documentType === 'Other' ? 'selected' : ''}>Other</option>
                        </select>
                    </div>
                    <div class="col-md-1">
                        <button type="button" class="btn btn-sm btn-danger" onclick="removeFile(${docData.id})">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                `;
                fileList.appendChild(row);
            });

            // Update form inputs for submission without clearing existing data
            updateFormInputsPreservingState();
        }

        function updateDocumentType(fileId, documentType) {
            const docData = documentsData.find(d => d.id === fileId);
            if (docData) {
                docData.documentType = documentType;
                console.log(`Updated document type for file ${fileId}: ${documentType}`);
                
                // Update form inputs while preserving all existing selections
                updateFormInputsPreservingState();
            }
        }

        function removeFile(fileId) {
            documentsData = documentsData.filter(d => d.id !== fileId);
            renderFileList();
        }

        // FIXED: New function that preserves existing form state
        function updateFormInputsPreservingState() {
            // Remove only our generated form inputs, not all inputs
            const existingDocInputs = document.querySelectorAll('input[name="NewDocuments"][data-generated="true"]');
            const existingTypeInputs = document.querySelectorAll('input[name="NewDocumentTypes"][data-generated="true"]');
            
            existingDocInputs.forEach(input => input.remove());
            existingTypeInputs.forEach(input => input.remove());

            // Create new DataTransfer for files
            const dt = new DataTransfer();
            
            // Add files and document types to form
            documentsData.forEach(docData => {
                // Add file to DataTransfer
                dt.items.add(docData.file);
                
                // Create hidden input for document type with proper marking
                const typeInput = document.createElement('input');
                typeInput.type = 'hidden';
                typeInput.name = 'NewDocumentTypes';
                typeInput.value = docData.documentType;
                typeInput.setAttribute('data-generated', 'true'); // Mark as our generated input
                typeInput.setAttribute('data-file-id', docData.id); // Track which file this belongs to
                document.querySelector('form').appendChild(typeInput);
            });

            // Create or update file input for form submission
            let submissionFileInput = document.querySelector('input[name="NewDocuments"][data-generated="true"]');
            if (!submissionFileInput) {
                submissionFileInput = document.createElement('input');
                submissionFileInput.type = 'file';
                submissionFileInput.name = 'NewDocuments';
                submissionFileInput.multiple = true;
                submissionFileInput.style.display = 'none';
                submissionFileInput.setAttribute('data-generated', 'true');
                document.querySelector('form').appendChild(submissionFileInput);
            }
            
            // Assign files to the submission input
            submissionFileInput.files = dt.files;
            
            console.log('Form inputs updated:', {
                filesCount: dt.files.length,
                typesCount: documentsData.length,
                documentsWithTypes: documentsData.filter(d => d.documentType).length
            });
        }

        function formatFileSize(bytes) {
            if (bytes === 0) return '0 Bytes';
            const k = 1024;
            const sizes = ['Bytes', 'KB', 'MB', 'GB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
        }

        // Form submission validation
        document.querySelector('form').addEventListener('submit', function(e) {
            // Check if all selected files have document types
            const missingTypes = documentsData.filter(d => !d.documentType || d.documentType === '');
            if (missingTypes.length > 0) {
                e.preventDefault();
                alert(`Please select document types for all uploaded files. ${missingTypes.length} files are missing document types.`);
                
                // Highlight the first missing file
                const firstMissingId = missingTypes[0].id;
                const selectElement = document.getElementById(`docType_${firstMissingId}`);
                if (selectElement) {
                    selectElement.focus();
                    selectElement.scrollIntoView({ behavior: 'smooth', block: 'center' });
                }
                return false;
            }
            
            console.log('Form submission approved with', documentsData.length, 'files');
        });
    </script>

    <style>
        /* Custom styling for Select2 dropdown to match form styling */
        .select2-dropdown-style {
            border-color: #ced4da;
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        }

        .select2-container--default .select2-results__option--highlighted[aria-selected] {
            background-color: #0d6efd;
        }

        .select2-container--default .select2-search--dropdown .select2-search__field {
            border: 1px solid #ced4da;
            border-radius: 0.2rem;
            padding: 0.375rem 0.75rem;
        }

        .select2-container--default .select2-search--dropdown .select2-search__field:focus {
            border-color: #86b7fe;
            outline: 0;
            box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
        }

        #dropZone:hover {
            border-color: #0056b3;
            background-color: #f8f9fa;
        }

        .file-list-item {
            border: 1px solid #dee2e6;
            border-radius: 0.375rem;
            background-color: #ffffff;
        }
    </style>
}

