@model FinserveNew.Models.LeaveModel

@{
    ViewData["Title"] = "Process Leave";
    bool isUnpaidLeave = ViewBag.IsUnpaidLeave == true;
    var unpaidLeaveRequest = ViewBag.UnpaidLeaveRequest as FinserveNew.Models.UnpaidLeaveRequestModel;
}

<div class="d-flex justify-content-between align-items-center mb-4">
    @if (isUnpaidLeave)
    {
        <h2 class="page-title mb-0">Process Unpaid Leave Request #@unpaidLeaveRequest.UnpaidLeaveRequestID</h2>
    }
    else
    {
        <h2 class="page-title mb-0">Process Leave Application #@Model.LeaveID</h2>
    }
    <div class="btn-group" role="group">
        @if (isUnpaidLeave)
        {
            <a asp-action="UnpaidLeaveIndex" class="btn btn-outline-primary">
                <i class="fas fa-arrow-left me-2"></i>Back to Unpaid Leave List
            </a>
        }
        else
        {
            <a asp-action="LeaveIndex" class="btn btn-outline-primary">
                <i class="fas fa-arrow-left me-2"></i>Back to Leave List
            </a>
        }
        <a asp-action="PendingLeaves" class="btn btn-outline-warning">
            <i class="fas fa-clock me-2"></i>Pending Leaves
        </a>
    </div>
</div>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["Success"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<div class="form-container">
    <div class="row">
        <!-- Leave/Unpaid Leave Details -->
        <div class="col-md-6">
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-info-circle me-2"></i>
                        @(isUnpaidLeave ? "Unpaid Leave Request Information" : "Leave Information")
                    </h5>
                </div>
                <div class="card-body">
                    @if (isUnpaidLeave)
                    {
                        <div class="row mb-3">
                            <div class="col-sm-4"><strong>Request ID:</strong></div>
                            <div class="col-sm-8">#@unpaidLeaveRequest.UnpaidLeaveRequestID</div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-sm-4"><strong>Employee:</strong></div>
                            <div class="col-sm-8">
                                <span class="badge bg-secondary">@unpaidLeaveRequest.Employee.EmployeeID</span>
                                <small class="text-muted ms-2">@unpaidLeaveRequest.Employee.Username</small>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-sm-4"><strong>Leave Type:</strong></div>
                            <div class="col-sm-8">
                                <span class="badge bg-info">@unpaidLeaveRequest.LeaveType.TypeName</span>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-sm-4"><strong>Requested Days:</strong></div>
                            <div class="col-sm-8">
                                <strong class="text-primary">@unpaidLeaveRequest.RequestedDays days</strong>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-sm-4"><strong>Excess Days:</strong></div>
                            <div class="col-sm-8">
                                <strong class="text-danger">@unpaidLeaveRequest.ExcessDays days (Unpaid)</strong>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-sm-4"><strong>Status:</strong></div>
                            <div class="col-sm-8">
                                <span class="badge bg-warning">@unpaidLeaveRequest.Status</span>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-sm-4"><strong>Reason:</strong></div>
                            <div class="col-sm-8">@(unpaidLeaveRequest.Reason ?? "No reason provided")</div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-sm-4"><strong>Justification:</strong></div>
                            <div class="col-sm-8">
                                <div class="alert alert-info mb-0">
                                    <i class="fas fa-quote-left me-2"></i>
                                    @(unpaidLeaveRequest.JustificationReason ?? "No justification provided")
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="row mb-3">
                            <div class="col-sm-4"><strong>Leave ID:</strong></div>
                            <div class="col-sm-8">#@Model.LeaveID</div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-sm-4"><strong>Employee:</strong></div>
                            <div class="col-sm-8">
                                <span class="badge bg-secondary">@Model.Employee.EmployeeID</span>
                                <small class="text-muted ms-2">@Model.Employee.Username</small>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-sm-4"><strong>Leave Type:</strong></div>
                            <div class="col-sm-8">
                                <span class="badge bg-info">@Model.LeaveType.TypeName</span>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-sm-4"><strong>Leave Days:</strong></div>
                            <div class="col-sm-8">
                                <strong class="text-primary">@Model.LeaveDays days</strong>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-sm-4"><strong>Status:</strong></div>
                            <div class="col-sm-8">
                                <span class="badge bg-warning">@Model.Status</span>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-sm-4"><strong>Reason:</strong></div>
                            <div class="col-sm-8">@(Model.Reason ?? "No reason provided")</div>
                        </div>
                        @if (!string.IsNullOrEmpty(Model.Description))
                        {
                            <div class="row mb-3">
                                <div class="col-sm-4"><strong>Description:</strong></div>
                                <div class="col-sm-8">@Model.Description</div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>

        <!-- Date Information -->
        <div class="col-md-6">
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-calendar-alt me-2"></i>Timeline & Duration
                    </h5>
                </div>
                <div class="card-body">
                    @if (isUnpaidLeave)
                    {
                        <div class="row mb-3">
                            <div class="col-sm-4"><strong>Start Date:</strong></div>
                            <div class="col-sm-8">@unpaidLeaveRequest.StartDate.ToString("dd MMM yyyy")</div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-sm-4"><strong>End Date:</strong></div>
                            <div class="col-sm-8">@unpaidLeaveRequest.EndDate.ToString("dd MMM yyyy")</div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-sm-4"><strong>Submitted:</strong></div>
                            <div class="col-sm-8">@unpaidLeaveRequest.SubmissionDate.ToString("dd MMM yyyy HH:mm")</div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-sm-4"><strong>Days Pending:</strong></div>
                            <div class="col-sm-8">
                                @{
                                    var daysPending = (DateTime.Now - unpaidLeaveRequest.SubmissionDate).Days;
                                }
                                @if (daysPending > 7)
                                {
                                    <span class="badge bg-danger">@daysPending days</span>
                                }
                                else if (daysPending > 3)
                                {
                                    <span class="badge bg-warning">@daysPending days</span>
                                }
                                else
                                {
                                    <span class="badge bg-success">@daysPending days</span>
                                }
                            </div>
                        </div>
                        
                        <!-- Unpaid Leave Balance Impact -->
                        <div class="row mb-3">
                            <div class="col-sm-12">
                                <div class="alert alert-warning">
                                    <i class="fas fa-exclamation-triangle me-2"></i>
                                    <strong>Balance Impact:</strong><br>
                                    • Days from balance: @(unpaidLeaveRequest.RequestedDays - unpaidLeaveRequest.ExcessDays)<br>
                                    • Unpaid days: @unpaidLeaveRequest.ExcessDays<br>
                                    • Total requested: @unpaidLeaveRequest.RequestedDays
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="row mb-3">
                            <div class="col-sm-4"><strong>Start Date:</strong></div>
                            <div class="col-sm-8">@Model.StartDate.ToString("dd MMM yyyy")</div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-sm-4"><strong>End Date:</strong></div>
                            <div class="col-sm-8">@Model.EndDate.ToString("dd MMM yyyy")</div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-sm-4"><strong>Submitted:</strong></div>
                            <div class="col-sm-8">@Model.SubmissionDate.ToString("dd MMM yyyy HH:mm")</div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-sm-4"><strong>Days Pending:</strong></div>
                            <div class="col-sm-8">
                                @{
                                    var daysPending = (DateTime.Now - Model.SubmissionDate).Days;
                                }
                                @if (daysPending > 7)
                                {
                                    <span class="badge bg-danger">@daysPending days</span>
                                }
                                else if (daysPending > 3)
                                {
                                    <span class="badge bg-warning">@daysPending days</span>
                                }
                                else
                                {
                                    <span class="badge bg-success">@daysPending days</span>
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Medical Certificate Section for HR -->
    @{
        var leaveTypeName = isUnpaidLeave ? unpaidLeaveRequest.LeaveType?.TypeName : Model.LeaveType?.TypeName;
    }
    @if (leaveTypeName != null && leaveTypeName.ToLower().Contains("medical"))
    {
        <div class="card mb-4">
            <div class="card-header bg-light">
                <h5 class="card-title mb-0">
                    <i class="fas fa-file-medical me-2"></i>Medical Certificate
                </h5>
            </div>
            <div class="card-body">
                @if (ViewBag.HasMedicalCertificate == true && !string.IsNullOrEmpty(ViewBag.MedicalCertificateFileName?.ToString()))
                {
                    <div class="alert alert-success mb-3">
                        <i class="fas fa-check-circle me-2"></i>
                        <strong>Medical certificate uploaded and available for review</strong>
                    </div>
                    
                    <div class="d-flex align-items-center justify-content-between p-3 bg-light rounded">
                        <div class="d-flex align-items-center">
                            <i class="fas fa-file-medical text-success me-3 fa-2x"></i>
                            <div>
                                <div class="fw-bold">@ViewBag.MedicalCertificateFileName</div>
                                <small class="text-muted">
                                    Uploaded on: @ViewBag.MedicalCertificateUploadDate
                                </small>
                                @if (!string.IsNullOrEmpty(ViewBag.DocumentComment?.ToString()))
                                {
                                    <br><small class="text-info">@ViewBag.DocumentComment</small>
                                }
                            </div>
                        </div>
                        <div class="d-flex gap-2">
                            @if (!string.IsNullOrEmpty(ViewBag.MedicalCertificateUrl?.ToString()))
                            {
                                <a href="@ViewBag.MedicalCertificateUrl" target="_blank" class="btn btn-sm btn-outline-primary">
                                    <i class="fas fa-eye me-1"></i>View Certificate
                                </a>
                                @if (isUnpaidLeave)
                                {
                                    <a asp-action="DownloadUnpaidLeaveMedicalCertificate" asp-route-unpaidLeaveId="@unpaidLeaveRequest.UnpaidLeaveRequestID" class="btn btn-sm btn-outline-secondary">
                                        <i class="fas fa-download me-1"></i>Download
                                    </a>
                                }
                                else
                                {
                                    <a asp-action="DownloadMedicalCertificate" asp-route-leaveId="@Model.LeaveID" class="btn btn-sm btn-outline-secondary">
                                        <i class="fas fa-download me-1"></i>Download
                                    </a>
                                }
                            }
                        </div>
                    </div>
                    
                    <div class="mt-3">
                        <div class="alert alert-info">
                            <i class="fas fa-info-circle me-2"></i>
                            <strong>Review Note:</strong> Please verify the medical certificate before approving this medical leave application.
                        </div>
                    </div>
                }
                else
                {
                    <div class="alert alert-warning">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        <strong>No medical certificate uploaded</strong>
                        <br>
                        <small>Medical certificate is required for medical leave applications. Consider rejecting this application or requesting the employee to upload the required documentation.</small>
                    </div>
                }
            </div>
        </div>
    }

    <!-- Processing Form -->
    <div class="card">
        <div class="card-header bg-primary text-white">
            <h5 class="card-title mb-0">
                <i class="fas fa-clipboard-check me-2"></i>
                @(isUnpaidLeave ? "Process This Unpaid Leave Request" : "Process This Leave Application")
            </h5>
        </div>
        <div class="card-body">
            @if (isUnpaidLeave)
            {
                <form asp-action="ProcessUnpaidLeave" asp-route-id="@unpaidLeaveRequest.UnpaidLeaveRequestID" method="post" id="processLeaveForm">
                    @Html.AntiForgeryToken()

                    <!-- Special Alert for Unpaid Leave -->
                    <div class="alert alert-warning mb-4">
                        <i class="fas fa-info-circle me-2"></i>
                        <strong>Unpaid Leave Request Details:</strong><br>
                        This request will deduct <strong>@(unpaidLeaveRequest.RequestedDays - unpaidLeaveRequest.ExcessDays) days</strong> from the employee's leave balance and mark <strong>@unpaidLeaveRequest.ExcessDays days</strong> as unpaid leave.
                        <br><br>
                        <strong>Employee Justification:</strong><br>
                        <em>"@(unpaidLeaveRequest.JustificationReason ?? "No justification provided")"</em>
                    </div>

                    <!-- Remarks Field -->
                    <div class="mb-3">
                        <label for="remarks" class="form-label">
                            Remarks:
                            <span id="approval-label" class="text-muted">(Optional for approval)</span>
                            <span id="rejection-label" class="text-danger d-none">*Required for rejection</span>
                        </label>
                        <textarea name="remarks" id="remarks" class="form-control" rows="3"
                                  placeholder="Add remarks for this decision..."></textarea>
                        <div class="form-text">
                            <span id="approval-help">These remarks will be visible to the employee.</span>
                            <span id="rejection-help" class="d-none text-danger">
                                <strong>Please explain why this unpaid leave request is being rejected.</strong>
                            </span>
                        </div>
                        <div id="remarks-error" class="invalid-feedback d-none">
                            Rejection reason is required. Please provide a clear explanation for rejecting this unpaid leave request.
                        </div>
                    </div>

                    <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                        <button type="button" id="approveBtn" class="btn btn-success btn-lg me-md-2">
                            <i class="fas fa-check me-2"></i>Approve Unpaid Leave
                        </button>
                        <button type="button" id="rejectBtn" class="btn btn-danger btn-lg">
                            <i class="fas fa-times me-2"></i>Reject Request
                        </button>
                    </div>

                    <input type="hidden" name="action" id="selectedAction" value="">
                </form>
            }
            else
            {
                <form asp-action="ProcessLeave" asp-route-id="@Model.LeaveID" method="post" id="processLeaveForm">
                    @Html.AntiForgeryToken()

                    <!-- Remarks Field -->
                    <div class="mb-3">
                        <label for="remarks" class="form-label">
                            Remarks:
                            <span id="approval-label" class="text-muted">(Optional for approval)</span>
                            <span id="rejection-label" class="text-danger d-none">*Required for rejection</span>
                        </label>
                        <textarea name="remarks" id="remarks" class="form-control" rows="3"
                                  placeholder="Add remarks for this decision..."></textarea>
                        <div class="form-text">
                            <span id="approval-help">These remarks will be visible to the employee.</span>
                            <span id="rejection-help" class="d-none text-danger">
                                <strong>Please explain why this leave request is being rejected.</strong>
                            </span>
                        </div>
                        <div id="remarks-error" class="invalid-feedback d-none">
                            Rejection reason is required. Please provide a clear explanation for rejecting this leave application.
                        </div>
                    </div>

                    @if (Model.LeaveType?.TypeName != null && Model.LeaveType.TypeName.ToLower().Contains("medical") && ViewBag.HasMedicalCertificate == false)
                    {
                        <div class="alert alert-danger">
                            <i class="fas fa-exclamation-triangle me-2"></i>
                            <strong>Warning:</strong> This medical leave application does not have a medical certificate. Consider rejecting the application or requesting proper documentation.
                        </div>
                    }

                    <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                        <button type="button" id="approveBtn" class="btn btn-success btn-lg me-md-2">
                            <i class="fas fa-check me-2"></i>Approve Leave
                        </button>
                        <button type="button" id="rejectBtn" class="btn btn-danger btn-lg">
                            <i class="fas fa-times me-2"></i>Reject Leave
                        </button>
                    </div>

                    <input type="hidden" name="action" id="selectedAction" value="">
                </form>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            const remarksField = $('#remarks');
            const approveBtn = $('#approveBtn');
            const rejectBtn = $('#rejectBtn');
            const form = $('#processLeaveForm');
            const selectedActionInput = $('#selectedAction');
            
            const approvalLabel = $('#approval-label');
            const rejectionLabel = $('#rejection-label');
            const approvalHelp = $('#approval-help');
            const rejectionHelp = $('#rejection-help');
            const remarksError = $('#remarks-error');

            const isUnpaidLeave = @(isUnpaidLeave.ToString().ToLower());

            // Handle Approve Button Click
            approveBtn.on('click', function() {
                let confirmMessage = isUnpaidLeave ? 
                    'Are you sure you want to approve this unpaid leave request?\n\nThis will:\n• Deduct @(isUnpaidLeave ? (unpaidLeaveRequest.RequestedDays - unpaidLeaveRequest.ExcessDays).ToString("0.#") : "0") days from employee balance\n• Create @(isUnpaidLeave ? unpaidLeaveRequest.ExcessDays.ToString("0.#") : "0") unpaid leave days\n• Generate approved leave record' :
                    'Are you sure you want to approve this leave application?';
                
                if (confirm(confirmMessage)) {
                    selectedActionInput.val('approve');
                    form.submit();
                }
            });

            // Handle Reject Button Click with Validation
            rejectBtn.on('click', function() {
                const remarks = remarksField.val().trim();
                
                // Clear previous error states
                remarksField.removeClass('is-invalid');
                remarksError.addClass('d-none');
                
                if (remarks === '') {
                    // Show error if no remarks provided
                    remarksField.addClass('is-invalid');
                    remarksError.removeClass('d-none');
                    remarksField.focus();
                    return false;
                }
                
                let confirmMessage = isUnpaidLeave ?
                    'Are you sure you want to reject this unpaid leave request?\n\nReason: ' + remarks :
                    'Are you sure you want to reject this leave application?\n\nReason: ' + remarks;
                
                if (confirm(confirmMessage)) {
                    selectedActionInput.val('reject');
                    form.submit();
                }
            });

            // Show Different UI Based on Button Hover
            rejectBtn.on('mouseenter focus', function() {
                approvalLabel.addClass('d-none');
                rejectionLabel.removeClass('d-none');
                approvalHelp.addClass('d-none');
                rejectionHelp.removeClass('d-none');
                
                let placeholder = isUnpaidLeave ?
                    'Please explain why this unpaid leave request is being rejected...' :
                    'Please explain why this leave request is being rejected...';
                remarksField.attr('placeholder', placeholder);
            });

            approveBtn.on('mouseenter focus', function() {
                approvalLabel.removeClass('d-none');
                rejectionLabel.addClass('d-none');
                approvalHelp.removeClass('d-none');
                rejectionHelp.addClass('d-none');
                remarksField.attr('placeholder', 'Add remarks for this decision...');
                
                // Clear rejection validation
                remarksField.removeClass('is-invalid');
                remarksError.addClass('d-none');
            });

            // Clear Validation on Input
            remarksField.on('input', function() {
                if ($(this).val().trim() !== '') {
                    $(this).removeClass('is-invalid');
                    remarksError.addClass('d-none');
                }
            });
        });
    </script>
}

@* <style>
    /* Medical Certificate styling for HR */
    .medical-certificate-section {
        border-left: 4px solid #17a2b8;
        background-color: #f8f9fa;
    }

        .medical-certificate-section .card-header {
            background-color: #e9ecef;
            border-bottom: 1px solid #dee2e6;
        }

    /* Enhanced certificate display */
    .medical-certificate-section .card {
        border: 1px solid #17a2b8;
        box-shadow: 0 2px 4px rgba(23, 162, 184, 0.1);
    }

    .medical-certificate-section .alert-success {
        background-color: #d1ecf1;
        border-color: #bee5eb;
        color: #0c5460;
    }

    .medical-certificate-section .alert-warning {
        background-color: #fff3cd;
        border-color: #ffeaa7;
        color: #856404;
    }

    /* Processing form enhancements */
    .card-header.bg-primary {
        background-color: #0d6efd !important;
    }

    .form-container .card {
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        border: 1px solid rgba(0, 0, 0, 0.125);
    }

    .badge {
        font-size: 0.75em;
    }

    .btn-lg {
        padding: 0.5rem 1rem;
        font-size: 1.125rem;
    }

    /* Alert styling */
    .alert {
        border-left-width: 4px;
    }

    .alert-info {
        border-left-color: #0dcaf0;
    }

    .alert-warning {
        border-left-color: #ffc107;
    }

    .alert-success {
        border-left-color: #198754;
    }

    .alert-danger {
        border-left-color: #dc3545;
    }

    /* Enhanced Form Validation Styling */
    .is-invalid {
        border-color: #dc3545;
        box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.25);
    }

    .invalid-feedback {
        display: block;
        width: 100%;
        margin-top: 0.25rem;
        font-size: 0.875em;
        color: #dc3545;
    }

    /* Button Hover Effects */
    #rejectBtn:hover {
        transform: translateY(-1px);
        box-shadow: 0 4px 8px rgba(220, 53, 69, 0.3);
    }

    #approveBtn:hover {
        transform: translateY(-1px);
        box-shadow: 0 4px 8px rgba(25, 135, 84, 0.3);
    }

    /* Transition Effects */
    .btn {
        transition: all 0.2s ease-in-out;
    }

    .form-control {
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    }

    /* Unpaid Leave Specific Styling */
    .unpaid-leave-highlight {
        background: linear-gradient(135deg, #fff3cd 0%, #ffeaa7 100%);
        border: 2px solid #ffc107;
    }
</style> *@