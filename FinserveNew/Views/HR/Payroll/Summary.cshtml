@model FinserveNew.Models.ViewModels.PayrollProcessViewModel
@{
    ViewData["Title"] = "Payroll Summary";
}
@{
    var totalEmployerCost = Model.Payrolls?.Sum(e => e.TotalEmployerCost) ?? 0;
    var totalNetWages = Model.Payrolls?.Sum(e => e.TotalWages) ?? 0;
    var totalEmployees = Model.Payrolls?.Count ?? 0;
    
    var pendingPayrolls = Model.Payrolls?.Where(p => p.PaymentStatus == "Pending").ToList() ?? new List<FinserveNew.Models.Payroll>();
    var approvedPayrolls = Model.Payrolls?.Where(p => p.PaymentStatus == "Approved").ToList() ?? new List<FinserveNew.Models.Payroll>();
}

<div class="container-fluid py-4">
    <div class="row mb-4">
        <div class="col-md-8">
            <h2>Payroll Summary</h2>
            <p class="text-muted">Payroll summary for @Model.MonthName @Model.Year</p>
        </div>
        <div class="col-md-4 text-end">
            <a asp-action="Process" asp-route-month="@Model.Month" asp-route-year="@Model.Year" class="btn btn-primary me-2">
                <i class="fas fa-plus me-2"></i>Add Payroll
            </a>
            <a asp-action="HistoryByMonth" class="btn btn-outline-secondary">
                <i class="fas fa-history me-2"></i>History
            </a>
        </div>
    </div>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Batch Actions Section -->
    @if (Model.Payrolls.Any())
    {
        <div class="card mb-3">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <h6 class="card-title">
                            <i class="fas fa-paper-plane text-warning me-2"></i>
                            Batch Send for Approval
                        </h6>
                        @if (pendingPayrolls.Any())
                        {
                            <p class="text-muted small mb-2">
                                <strong>@pendingPayrolls.Count</strong> payroll(s) ready to send for approval
                            </p>
                            <form asp-action="BatchSendForApproval" method="post" class="d-inline">
                                <input type="hidden" name="month" value="@Model.Month" />
                                <input type="hidden" name="year" value="@Model.Year" />
                                <button type="submit" class="btn btn-warning" 
                                        onclick="return confirm('Send all @pendingPayrolls.Count pending payroll(s) for approval?')">
                                    <i class="fas fa-paper-plane me-1"></i>
                                    Send All for Approval (@pendingPayrolls.Count)
                                </button>
                            </form>
                        }
                        else
                        {
                            <p class="text-muted small mb-2">No pending payrolls to send for approval</p>
                            <button type="button" class="btn btn-warning" disabled>
                                <i class="fas fa-paper-plane me-1"></i>
                                Send All for Approval (0)
                            </button>
                        }
                    </div>
                    <div class="col-md-6">
                        <h6 class="card-title">
                            <i class="fas fa-check-circle text-success me-2"></i>
                            Batch Mark as Paid
                        </h6>
                        @if (approvedPayrolls.Any())
                        {
                            <p class="text-muted small mb-2">
                                <strong>@approvedPayrolls.Count</strong> approved payroll(s) ready to mark as paid
                            </p>
                            <form asp-action="BatchMarkAsPaid" method="post" class="d-inline">
                                <input type="hidden" name="month" value="@Model.Month" />
                                <input type="hidden" name="year" value="@Model.Year" />
                                <button type="submit" class="btn btn-success" 
                                        onclick="return confirm('Mark all @approvedPayrolls.Count approved payroll(s) as paid?')">
                                    <i class="fas fa-check me-1"></i>
                                    Mark All as Paid (@approvedPayrolls.Count)
                                </button>
                            </form>
                        }
                        else
                        {
                            <p class="text-muted small mb-2">No approved payrolls to mark as paid</p>
                            <button type="button" class="btn btn-success" disabled>
                                <i class="fas fa-check me-1"></i>
                                Mark All as Paid (0)
                            </button>
                        }
                    </div>
                </div>
            </div>
        </div>
    }

    <div class="card">
        <div class="card-header bg-light d-flex justify-content-between align-items-center">
            <h4 class="card-title mb-0">Payroll Records</h4>
            
            <div class="d-flex">
                <div class="input-group me-2">
                    <select id="summaryMonth" class="form-select" style="max-width: 150px;">
                        @for (int m = 1; m <= 12; m++)
                        {
                            <option value="@m" selected=@(m == Model.Month)>
                                @System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(m)
                            </option>
                        }
                    </select>
                    <select id="summaryYear" class="form-select" style="max-width: 100px;">
                        @for (int y = DateTime.Now.Year - 3; y <= DateTime.Now.Year + 3; y++)
                        {
                            <option value="@y" selected=@(y == Model.Year)>@y</option>
                        }
                    </select>
                    <button type="button" id="viewSummary" class="btn btn-outline-secondary">
                        <i class="fas fa-search"></i>
                    </button>
                </div>
                <button type="button" class="btn btn-outline-success d-flex align-items-center" onclick="exportToExcel()">
                    <i class="fas fa-file-excel me-1"></i>
                    <span>Export</span>
                </button>
            </div>
        </div>
        <div class="card-body">
            @if (Model.Payrolls.Any())
            {
                <!-- Status Summary Cards -->
                <div class="row mb-3">
                    <div class="col-md-2">
                        <div class="card border-secondary">
                            <div class="card-body text-center py-2">
                                <h6 class="card-title mb-1">Pending</h6>
                                <span class="badge bg-secondary fs-6">@Model.Payrolls.Count(p => p.PaymentStatus == "Pending")</span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="card border-warning">
                            <div class="card-body text-center py-2">
                                <h6 class="card-title mb-1">Pending Approval</h6>
                                <span class="badge bg-warning text-dark fs-6">@Model.Payrolls.Count(p => p.PaymentStatus == "Pending Approval")</span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="card border-info">
                            <div class="card-body text-center py-2">
                                <h6 class="card-title mb-1">Approved</h6>
                                <span class="badge bg-info fs-6">@Model.Payrolls.Count(p => p.PaymentStatus == "Approved")</span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="card border-danger">
                            <div class="card-body text-center py-2">
                                <h6 class="card-title mb-1">Rejected</h6>
                                <span class="badge bg-danger fs-6">@Model.Payrolls.Count(p => p.PaymentStatus == "Rejected")</span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="card border-success">
                            <div class="card-body text-center py-2">
                                <h6 class="card-title mb-1">Completed</h6>
                                <span class="badge bg-success fs-6">@Model.Payrolls.Count(p => p.PaymentStatus == "Completed")</span>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="table-responsive">
                    <table class="table table-hover" id="payrollTable">
                        <thead>
                            <tr>
                                <th>Employee ID</th>
                                <th>Employee Name</th>
                                @* <th>Project</th> *@
                                <th>Basic Salary</th>
                                <th>Total Wages</th>
                                <th>Total Cost</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var entry in Model.Payrolls)
                            {
                                <tr>
                                    <td>@entry.EmployeeID</td>
                                    <td>@entry.Employee.FirstName @entry.Employee.LastName</td>
                                    @* <td>@entry.ProjectName</td> *@
                                    <td>RM @entry.BasicSalary.ToString("N2")</td>
                                    <td>RM @entry.TotalWages.ToString("N2")</td>
                                    <td>RM @entry.TotalEmployerCost.ToString("N2")</td>
                                    <td>
                                        <span class="badge bg-@GetStatusBadgeColor(entry.PaymentStatus)">@entry.PaymentStatus</span>
                                        @if (entry.PaymentStatus == "Rejected")
                                        {
                                            // Get rejection reason for display
                                            var rejectionApproval = entry.Approvals?
                                            .Where(a => a.Status == "Rejected")
                                            .OrderByDescending(a => a.ApprovalDate)
                                            .FirstOrDefault();
                                            var rejectionReason = rejectionApproval?.Remarks ?? "No reason provided";
                                            var rejectedByName = rejectionApproval?.ActionByName ?? "Unknown"; // Use ActionByName
                                            <button type="button" class="btn btn-sm"
                                                    data-bs-toggle="tooltip"
                                                    data-bs-placement="top"
                                                    title="Rejected by @rejectedByName: @rejectionReason">
                                                <i class="fas fa-info-circle" style="color: #DC3545"></i>
                                            </button>
                                        }
                                    </td>
                                    <td>
                                        <div>
                                            @{
                                                var canEdit = entry.PaymentStatus == "Pending" || entry.PaymentStatus == "Rejected";
                                                var canSendForApproval = entry.PaymentStatus == "Pending";
                                                var canMarkAsPaid = entry.PaymentStatus == "Approved";
                                            }
                                            
                                            @if (canEdit)
                                            {
                                                <a asp-action="ViewPayroll"
                                                   asp-route-month="@Model.Month"
                                                   asp-route-year="@Model.Year"
                                                   asp-route-employeeId="@entry.EmployeeID"
                                                   class="btn btn-sm btn-outline-primary"
                                                   title="View Payroll">
                                                    <i class="fas fa-eye"></i>
                                                </a>
                                                <a asp-action="Process" 
                                                   asp-route-month="@Model.Month" 
                                                   asp-route-year="@Model.Year" 
                                                   asp-route-employeeId="@entry.EmployeeID" 
                                                   class="btn btn-sm btn-outline-primary ms-1"
                                                   title="Edit Payroll">
                                                    <i class="fas fa-edit"></i>
                                                </a>
                                            }
                                            else
                                            {
                                                <a asp-action="ViewPayroll" 
                                                   asp-route-month="@Model.Month" 
                                                   asp-route-year="@Model.Year" 
                                                   asp-route-employeeId="@entry.EmployeeID" 
                                                   class="btn btn-sm btn-outline-primary"
                                                   title="View Payroll">
                                                    <i class="fas fa-eye"></i>
                                                </a>
                                                <span style="margin-right: 40px;"></span>
                                            }

                                            @if (canSendForApproval)
                                            {
                                                <form asp-action="SendApprovalRequest" method="post" class="d-inline">
                                                    <input type="hidden" name="payrollId" value="@entry.PayrollID" />
                                                    <button type="submit" class="btn btn-sm btn-warning" 
                                                            onclick="return confirm('Send this payroll for approval?')"
                                                            title="Send for Approval">
                                                        <i class="fas fa-paper-plane me-1"></i>Send for Approval
                                                    </button>
                                                </form>
                                            }

                                            @if (canMarkAsPaid)
                                            {
                                                <form asp-action="MarkAsPaid" method="post" class="d-inline">
                                                    <input type="hidden" name="payrollId" value="@entry.PayrollID" />
                                                    <button type="submit" class="btn btn-sm btn-success" 
                                                            onclick="return confirm('Mark this payroll as paid?')"
                                                            title="Mark as Paid">
                                                        <i class="fas fa-check me-1"></i>Mark as Paid
                                                    </button>
                                                </form>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                        <tfoot>
                            <tr class="table-light fw-bold">
                                <td colspan="3">Totals</td>
                                <td>RM @totalNetWages.ToString("N2")</td>
                                <td>RM @totalEmployerCost.ToString("N2")</td>
                                <td></td>
                                <td></td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
                
                <div class="mt-4">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="card">
                                <div class="card-body">
                                    <h5 class="card-title">Payroll Summary</h5>
                                    <table class="table table-sm">
                                        <tr>
                                            <td>Total Employees</td>
                                            <td>@totalEmployees</td>
                                        </tr>
                                        <tr>
                                            <td>Total Salary Cost</td>
                                            <td>RM @totalEmployerCost.ToString("N2")</td>
                                        </tr>
                                        <tr>
                                            <td>Total Net Wages</td>
                                            <td>RM @totalNetWages.ToString("N2")</td>
                                        </tr>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="alert alert-info">
                    <p class="mb-0">No payroll records found for @Model.MonthName @Model.Year. 
                    <a asp-action="Process" asp-route-month="@Model.Month" asp-route-year="@Model.Year" class="alert-link">
                        Click here to add payroll entries
                    </a>.</p>
                </div>
            }
        </div>
    </div>
</div>

@functions {
    string GetStatusBadgeColor(string status)
    {
        return status switch
        {
            "Pending" => "secondary",
            "Pending Approval" => "warning",
            "Approved" => "info",
            "Rejected" => "danger",
            "Completed" => "success",
            _ => "secondary"
        };
    }
}

@section Scripts {
    <script>
        $(function() {
            $('#viewSummary').click(function() {
                let month = $('#summaryMonth').val();
                let year = $('#summaryYear').val();
                window.location.href = '@Url.Action("Summary")' + '?month=' + month + '&year=' + year;
            });
        });
        
        function exportToExcel() {
            // Check if table has data
            if ($('#payrollTable tbody tr').length === 0) {
                alert('No data to export');
                return;
            }
            
            // Create a workbook with a worksheet
            let wb = XLSX.utils.book_new();
            let ws = XLSX.utils.table_to_sheet(document.getElementById('payrollTable'));
            
            // Add the worksheet to the workbook
            XLSX.utils.book_append_sheet(wb, ws, 'Payroll @Model.MonthName @Model.Year');
            
            // Generate file and trigger download
            XLSX.writeFile(wb, 'Payroll_@(Model.MonthName)@(Model.Year).xlsx');
        }

        // Initialize Bootstrap tooltips
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        })
    </script>
    
    <!-- Include SheetJS for Excel export -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>
}
