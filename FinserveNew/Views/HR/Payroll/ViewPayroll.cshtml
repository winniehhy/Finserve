@model FinserveNew.Models.ViewModels.PayrollProcessViewModel
@{
    ViewData["Title"] = "Payroll Details";
    var monthName = System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(Model.Month);
    var currentStatus = ViewBag.CurrentPayrollStatus as string;
    var payrollId = ViewBag.PayrollID as string;
    var employee = ViewBag.Employee as FinserveNew.Models.Employee;
    var rejectionReason = ViewBag.RejectionReason as string;
    var rejectedBy = ViewBag.RejectedBy as string;
    var rejectedDate = ViewBag.RejectedDate as DateTime?;
}

<div class="container-fluid py-4">
    <div class="row mb-4">
        <div class="col-md-8">
            <h2>Payroll Details - @monthName @Model.Year</h2>
            <p class="text-muted">@employee?.FirstName @employee?.LastName (@Model.EmployeeID)</p>
        </div>
        <div class="col-md-4 text-end">
            <a asp-action="Summary" asp-route-month="@Model.Month" asp-route-year="@Model.Year" class="btn btn-outline-secondary">
                <i class="fas fa-arrow-left me-2"></i>Back to Summary
            </a>
            @if (currentStatus == "Rejected")
            {
                <a asp-action="Process" asp-route-month="@Model.Month" asp-route-year="@Model.Year" asp-route-employeeId="@Model.EmployeeID" 
                   class="btn btn-primary ms-2">
                    <i class="fas fa-edit me-2"></i>Edit & Resubmit
                </a>
            }
        </div>
    </div>
    <div class="alert alert-info mt-2">
        <i class="fas fa-info-circle me-2"></i>
        <strong>Status:</strong>
        @switch (currentStatus)
        {
            case "Pending Approval":
                <span class="badge bg-warning">@currentStatus</span>
                <span class="ms-2">This payroll is waiting for approval and cannot be edited.</span>
                break;
            case "Approved":
                <span class="badge bg-info">@currentStatus</span>
                <span class="ms-2">This payroll has been approved and cannot be edited.</span>
                break;
            case "Paid":
                <span class="badge bg-success">@currentStatus</span>
                <span class="ms-2">This payroll has been paid and cannot be edited.</span>
                break;
            case "Rejected":
                <span class="badge bg-danger">@currentStatus</span>
                <span class="ms-2">This payroll was rejected. You can edit it from the summary page.</span>
                break;
            default:
                <span class="badge bg-secondary">@currentStatus</span>
                break;
        }
    </div>

    @if (currentStatus == "Rejected" && !string.IsNullOrEmpty(rejectionReason))
    {
        <div class="alert alert-danger mt-2">
            <h6><i class="fas fa-exclamation-triangle me-2"></i>Rejection Details</h6>
            <p class="mb-1"><strong>Rejected by:</strong> @rejectedBy</p>
            @if (rejectedDate.HasValue)
            {
                <p class="mb-1"><strong>Rejected on:</strong> @rejectedDate.Value.ToString("dd MMM yyyy HH:mm")</p>
            }
            <p class="mb-0"><strong>Reason:</strong> @rejectionReason</p>
        </div>
    }

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="row">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header bg-light">
                    <h4 class="card-title mb-0">Payroll Details</h4>
                </div>
                <div class="card-body">
                    <!-- Employee Information -->
                    <div class="row mb-4">
                        <div class="col-md-3">
                            <label class="form-label fw-bold">Employee ID</label>
                            <p class="form-control-plaintext">@Model.EmployeeID</p>
                        </div>
                        <div class="col-md-3">
                            <label class="form-label fw-bold">Employee Name</label>
                            <p class="form-control-plaintext">@employee?.FirstName @employee?.LastName</p>
                        </div>
                        <div class="col-md-3">
                            <label class="form-label fw-bold">Income Tax Number</label>
                            <p class="form-control-plaintext">@employee?.IncomeTaxNumber</p>
                        </div>
                        <div class="col-md-3">
                            <label class="form-label fw-bold">EPF Number</label>
                            <p class="form-control-plaintext">@employee?.EPFNumber</p>
                        </div>
                    </div>

                    <!-- Salary Information -->
                    <div class="row mb-4">
                        <div class="col-md-6">
                            <label class="form-label fw-bold">Basic Salary</label>
                            <p class="form-control-plaintext">RM @Model.BasicSalary.ToString("N2")</p>
                        </div>
                    </div>

                    <div class="row">
                        <!-- Employer Contributions -->
                        <div class="col-md-6">
                            <div class="card">
                                <div class="card-header bg-light">
                                    <h6 class="card-title mb-0">Employer Contributions</h6>
                                </div>
                                <div class="card-body">
                                    <div class="row mb-2">
                                        <div class="col-6"><strong>EPF (13%):</strong></div>
                                        <div class="col-6">RM @Model.EmployerEpf.ToString("N2")</div>
                                    </div>
                                    <div class="row mb-2">
                                        <div class="col-6"><strong>SOCSO:</strong></div>
                                        <div class="col-6">RM @Model.EmployerSocso.ToString("N2")</div>
                                    </div>
                                    <div class="row mb-2">
                                        <div class="col-6"><strong>EIS:</strong></div>
                                        <div class="col-6">RM @Model.EmployerEis.ToString("N2")</div>
                                    </div>
                                    <div class="row mb-2">
                                        <div class="col-6"><strong>Tax:</strong></div>
                                        <div class="col-6">RM @Model.EmployerTax.ToString("N2")</div>
                                    </div>
                                    <div class="row mb-2">
                                        <div class="col-6"><strong>Other:</strong></div>
                                        <div class="col-6">RM @Model.EmployerOtherContributions.ToString("N2")</div>
                                    </div>
                                    <hr>
                                    <div class="row">
                                        <div class="col-6"><strong>Total Cost:</strong></div>
                                        <div class="col-6"><strong>RM @Model.TotalEmployerCost.ToString("N2")</strong></div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Employee Deductions -->
                        <div class="col-md-6">
                            <div class="card">
                                <div class="card-header bg-light">
                                    <h6 class="card-title mb-0">Employee Deductions</h6>
                                </div>
                                <div class="card-body">
                                    <div class="row mb-2">
                                        <div class="col-6"><strong>EPF (11%):</strong></div>
                                        <div class="col-6">RM @Model.EmployeeEpf.ToString("N2")</div>
                                    </div>
                                    <div class="row mb-2">
                                        <div class="col-6"><strong>SOCSO:</strong></div>
                                        <div class="col-6">RM @Model.EmployeeSocso.ToString("N2")</div>
                                    </div>
                                    <div class="row mb-2">
                                        <div class="col-6"><strong>EIS:</strong></div>
                                        <div class="col-6">RM @Model.EmployeeEis.ToString("N2")</div>
                                    </div>
                                    <div class="row mb-2">
                                        <div class="col-6"><strong>Tax:</strong></div>
                                        <div class="col-6">RM @Model.EmployeeTax.ToString("N2")</div>
                                    </div>
                                    <hr>
                                    <div class="row">
                                        <div class="col-6"><strong>Net Salary:</strong></div>
                                        <div class="col-6"><strong>RM @Model.TotalWages.ToString("N2")</strong></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Payment Reference Column -->
        <div class="col-md-4">
            <!-- Payment Reference Card -->
            <div class="card">
                <div class="card-header bg-light">
                    <h6 class="card-title mb-0">
                        <i class="fas fa-university me-2"></i>Payment Reference
                    </h6>
                </div>
                <div class="card-body">
                    <div class="alert alert-success">
                        <div class="row mb-2">
                            <div class="col-12">
                                <strong>Amount to Pay:</strong>
                                <h5 class="text-success mb-0">RM @Model.TotalWages.ToString("N2")</h5>
                            </div>
                        </div>
                    </div>
                    
                    <table class="table table-sm">
                        <tr>
                            <td><strong>Bank Name:</strong></td>
                            <td>@(employee?.BankInformation?.BankName ?? "Not provided")</td>
                        </tr>
                        <tr>
                            <td><strong>Account Number:</strong></td>
                            <td>
                                @if (!string.IsNullOrEmpty(employee?.BankInformation?.BankAccountNumber))
                                {
                                    <span class="font-monospace">@employee.BankInformation.BankAccountNumber</span>
                                    <button type="button" class="btn btn-sm btn-outline-secondary ms-1" 
                                            onclick="copyToClipboard('@employee.BankInformation.BankAccountNumber', this)"
                                            title="Copy account number">
                                        <i class="fas fa-copy"></i>
                                    </button>
                                }
                                else
                                {
                                    <span class="text-muted">Not provided</span>
                                }
                            </td>
                        </tr>
                        <tr>
                            <td><strong>Account Holder:</strong></td>
                            <td>@employee?.FirstName @employee?.LastName</td>
                        </tr>
                    </table>

                    @if (string.IsNullOrEmpty(employee?.BankInformation?.BankName) || string.IsNullOrEmpty(employee?.BankInformation?.BankAccountNumber))
                    {
                        <div class="alert alert-warning mt-2">
                            <small>
                                <i class="fas fa-exclamation-triangle me-1"></i>
                                Bank details incomplete. Please ensure employee updates their banking information.
                            </small>
                        </div>
                    }
                </div>
            </div>

            <!-- Employee Information Card -->
            <div class="card mt-3">
                <div class="card-header bg-light">
                    <h6 class="card-title mb-0">Additional Employee Information</h6>
                </div>
                <div class="card-body">
                    <table class="table table-sm">
                        <tr>
                            <td>Email:</td>
                            <td>@employee?.Email</td>
                        </tr>
                        <tr>
                            <td>Position:</td>
                            <td>@employee?.Position</td>
                        </tr>
                        <tr>
                            <td>Role:</td>
                            <td>@employee?.Role?.RoleName</td>
                        </tr>
                        <tr>
                            <td>Join Date:</td>
                            <td>@employee?.JoinDate.ToString("dd MMM yyyy")</td>
                        </tr>
                    </table>
                </div>
            </div>

            <!-- Status Card -->
            @if (currentStatus == "Approved" || currentStatus == "Paid")
            {
                <div class="card mt-3">
                    <div class="card-header bg-light">
                        <h6 class="card-title mb-0">
                            <i class="fas fa-check-circle text-success me-2"></i>Payment Status
                        </h6>
                    </div>
                    <div class="card-body">
                        @if (currentStatus == "Approved")
                        {
                            <div class="alert alert-info">
                                <i class="fas fa-info-circle me-2"></i>
                                This payroll has been approved and is ready for payment processing.
                            </div>
                        }
                        else if (currentStatus == "Paid")
                        {
                            <div class="alert alert-success">
                                <i class="fas fa-check-circle me-2"></i>
                                This payroll has been processed and payment completed.
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Toast Container for Notifications -->
<div class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 11">
  <div id="copyToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
    <div class="toast-header">
      <i class="fas fa-check-circle text-success me-2"></i>
      <strong class="me-auto">Copied!</strong>
      <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
    <div class="toast-body" id="toastMessage">
      Text copied to clipboard
    </div>
  </div>
</div>

@section Scripts {
    <script>
        function copyToClipboard(text, button) {
            navigator.clipboard.writeText(text).then(function() {
                // Show success toast
                showCopyToast('Copied to clipboard!');
                
                // Temporarily change button appearance
                const originalHTML = button.innerHTML;
                const originalTitle = button.title;
                
                button.innerHTML = '<i class="fas fa-check text-success"></i>';
                button.title = 'Copied!';
                button.classList.remove('btn-outline-secondary');
                
                // Reset button after 2 seconds
                setTimeout(() => {
                    button.innerHTML = originalHTML;
                    button.title = originalTitle;
                    button.classList.remove('btn-success');
                    button.classList.add('btn-outline-secondary');
                }, 2000);
                
            }).catch(function(err) {
                console.error('Could not copy text: ', err);
                showCopyToast('Failed to copy to clipboard', 'error');
                
                // Fallback for older browsers
                const textArea = document.createElement('textarea');
                textArea.value = text;
                document.body.appendChild(textArea);
                textArea.focus();
                textArea.select();
                try {
                    document.execCommand('copy');
                    showCopyToast('Copied to clipboard!');
                } catch (err) {
                    console.error('Fallback: Oops, unable to copy', err);
                    showCopyToast('Failed to copy to clipboard', 'error');
                }
                document.body.removeChild(textArea);
            });
        }

        function showCopyToast(message, type = 'success') {
            const toast = document.getElementById('copyToast');
            const toastMessage = document.getElementById('toastMessage');
            const toastHeader = toast.querySelector('.toast-header');
            
            // Update message
            toastMessage.textContent = message;
            
            // Update header based on type
            if (type === 'error') {
                toastHeader.innerHTML = `
                    <i class="fas fa-exclamation-circle text-danger me-2"></i>
                    <strong class="me-auto">Error</strong>
                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
                `;
            } else {
                toastHeader.innerHTML = `
                    <i class="fas fa-check-circle text-success me-2"></i>
                    <strong class="me-auto">Copied!</strong>
                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
                `;
            }
            
            // Show toast
            const bsToast = new bootstrap.Toast(toast, {
                autohide: true,
                delay: 3000
            });
            bsToast.show();
        }
    </script>
}